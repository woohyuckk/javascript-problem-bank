{"numFailedTestSuites":14,"numFailedTests":65,"numPassedTestSuites":96,"numPassedTests":394,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":110,"numTotalTests":459,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1738890640352,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":18,"failureDetails":[{"matcherResult":{"expected":"/a/c","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/c\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/c\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:5:40)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 중간에 '..'가 포함되면 상위 디렉토리로 이동해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"중간에 '..'가 포함되면 상위 디렉토리로 이동해야 한다."},{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"a/b/c/","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"a/b/c/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"a/b/c/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:10:42)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 '.'는 무시되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"'.'는 무시되어야 한다."},{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"/a/b/","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:15:43)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 중복된 '/'는 하나로 합쳐야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"중복된 '/'는 하나로 합쳐야 한다."},{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"/a/b","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:20:35)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 시작 '/'가 있으면 유지해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"시작 '/'가 있으면 유지해야 한다."},{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"/a/b/","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/a/b/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:25:36)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 끝 '/'가 있으면 유지해야 한다 (단, 루트 '/'는 예외).","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"끝 '/'가 있으면 유지해야 한다 (단, 루트 '/'는 예외)."},{"ancestorTitles":["(lv.4)파일-경로-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"/","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js:33:40)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)파일-경로-정규화.js 테스트 상위 폴더를 계속 올려도 루트 이상은 처리하지 않는다 (이 예시는 현재 구현에서 무시).","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"상위 폴더를 계속 올려도 루트 이상은 처리하지 않는다 (이 예시는 현재 구현에서 무시)."}],"endTime":1738890642343,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › 중간에 '..'가 포함되면 상위 디렉토리로 이동해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/a/c\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"(lv.4)파일-경로-정규화.js 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"중간에 '..'가 포함되면 상위 디렉토리로 이동해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(normalizePath(\u001b[32m\"/a/b/../c\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/a/c\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m     expect(normalizePath(\u001b[32m\"/a/../../b\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:5:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › '.'는 무시되어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"a/b/c/\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"'.'는 무시되어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(normalizePath(\u001b[32m\"./a//b/./c/\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"a/b/c/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     expect(normalizePath(\u001b[32m\"/./\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:10:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › 중복된 '/'는 하나로 합쳐야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/a/b/\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   it(\u001b[32m\"중복된 '/'는 하나로 합쳐야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m     expect(normalizePath(\u001b[32m\"///a////b///\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/a/b/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     expect(normalizePath(\u001b[32m\"////\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:15:43)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › 시작 '/'가 있으면 유지해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/a/b\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   it(\u001b[32m\"시작 '/'가 있으면 유지해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     expect(normalizePath(\u001b[32m\"/a/b\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/a/b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     expect(normalizePath(\u001b[32m\"/\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:20:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › 끝 '/'가 있으면 유지해야 한다 (단, 루트 '/'는 예외).\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/a/b/\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m   it(\u001b[32m\"끝 '/'가 있으면 유지해야 한다 (단, 루트 '/'는 예외).\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m     expect(normalizePath(\u001b[32m\"/a/b/\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/a/b/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     expect(normalizePath(\u001b[32m\"a/b/\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"a/b/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m     \u001b[90m// 루트 \"/\"는 이미 끝, 그대로 \"/\"\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     expect(normalizePath(\u001b[32m\"/./\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:25:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)파일-경로-정규화.js 테스트 › 상위 폴더를 계속 올려도 루트 이상은 처리하지 않는다 (이 예시는 현재 구현에서 무시).\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"/\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 |\u001b[39m   it(\u001b[32m\"상위 폴더를 계속 올려도 루트 이상은 처리하지 않는다 (이 예시는 현재 구현에서 무시).\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m     \u001b[90m// 예: \"/../../..\" -> \"/\"\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 33 |\u001b[39m     expect(normalizePath(\u001b[32m\"/../../..\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m파일-경로-정규화.test.js\u001b[2m:33:40)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)파일-경로-정규화.test.js","startTime":1738890640710,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)복잡한-데이터-필터링.js 테스트"],"duration":15,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"tags":["React"],"info":{"likes":50,"active":true}},{"id":2,"tags":["Node.js"],"info":{"likes":10,"active":false}}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 50}, \"tags\": [\"React\"]}, {\"id\": 2, \"info\": {\"active\": false, \"likes\": 10}, \"tags\": [\"Node.js\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 50}, \"tags\": [\"React\"]}, {\"id\": 2, \"info\": {\"active\": false, \"likes\": 10}, \"tags\": [\"Node.js\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js:10:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)복잡한-데이터-필터링.js 테스트 조건이 없으면 전체 데이터를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"조건이 없으면 전체 데이터를 반환해야 한다."},{"ancestorTitles":["(lv.4)복잡한-데이터-필터링.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"tags":["React","JavaScript"],"info":{"likes":100,"active":true}},{"id":3,"tags":["JavaScript"],"info":{"likes":70,"active":true}}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js:25:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)복잡한-데이터-필터링.js 테스트 단일 조건(tags)을 만족하는 데이터만 필터링해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"단일 조건(tags)을 만족하는 데이터만 필터링해야 한다."},{"ancestorTitles":["(lv.4)복잡한-데이터-필터링.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"tags":["React"],"info":{"likes":100,"active":true}},{"id":3,"tags":["JavaScript"],"info":{"likes":80,"active":true}}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 80}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 80}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js:43:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)복잡한-데이터-필터링.js 테스트 중첩된 프로퍼티(info.active) 조건도 필터링해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"중첩된 프로퍼티(info.active) 조건도 필터링해야 한다."},{"ancestorTitles":["(lv.4)복잡한-데이터-필터링.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"tags":["React","JavaScript"],"info":{"likes":100,"active":true}},{"id":3,"tags":["JavaScript"],"info":{"likes":70,"active":true}}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js:66:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)복잡한-데이터-필터링.js 테스트 여러 조건(tags + info.active)을 모두 만족해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"여러 조건(tags + info.active)을 모두 만족해야 한다."},{"ancestorTitles":["(lv.4)복잡한-데이터-필터링.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":[],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js:83:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)복잡한-데이터-필터링.js 테스트 조건을 만족하는 데이터가 없으면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"조건을 만족하는 데이터가 없으면 빈 배열을 반환해야 한다."}],"endTime":1738890642471,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)복잡한-데이터-필터링.js 테스트 › 조건이 없으면 전체 데이터를 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 50}, \"tags\": [\"React\"]}, {\"id\": 2, \"info\": {\"active\": false, \"likes\": 10}, \"tags\": [\"Node.js\"]}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterComplexData(data\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual(data)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"단일 조건(tags)을 만족하는 데이터만 필터링해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m복잡한-데이터-필터링.test.js\u001b[2m:10:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)복잡한-데이터-필터링.js 테스트 › 단일 조건(tags)을 만족하는 데이터만 필터링해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m     \u001b[36mconst\u001b[39m conditions \u001b[33m=\u001b[39m { tags\u001b[33m:\u001b[39m \u001b[32m\"JavaScript\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterComplexData(data\u001b[33m,\u001b[39m conditions)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m       {\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m         id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m         tags\u001b[33m:\u001b[39m [\u001b[32m\"React\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"JavaScript\"\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m복잡한-데이터-필터링.test.js\u001b[2m:25:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)복잡한-데이터-필터링.js 테스트 › 중첩된 프로퍼티(info.active) 조건도 필터링해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 80}, \"tags\": [\"JavaScript\"]}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m     \u001b[36mconst\u001b[39m conditions \u001b[33m=\u001b[39m { \u001b[32m\"info.active\"\u001b[39m\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterComplexData(data\u001b[33m,\u001b[39m conditions)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m tags\u001b[33m:\u001b[39m [\u001b[32m\"React\"\u001b[39m]\u001b[33m,\u001b[39m info\u001b[33m:\u001b[39m { likes\u001b[33m:\u001b[39m \u001b[35m100\u001b[39m\u001b[33m,\u001b[39m active\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m } }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m tags\u001b[33m:\u001b[39m [\u001b[32m\"JavaScript\"\u001b[39m]\u001b[33m,\u001b[39m info\u001b[33m:\u001b[39m { likes\u001b[33m:\u001b[39m \u001b[35m80\u001b[39m\u001b[33m,\u001b[39m active\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m } }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m복잡한-데이터-필터링.test.js\u001b[2m:43:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)복잡한-데이터-필터링.js 테스트 › 여러 조건(tags + info.active)을 모두 만족해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"info\": {\"active\": true, \"likes\": 100}, \"tags\": [\"React\", \"JavaScript\"]}, {\"id\": 3, \"info\": {\"active\": true, \"likes\": 70}, \"tags\": [\"JavaScript\"]}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m conditions \u001b[33m=\u001b[39m { tags\u001b[33m:\u001b[39m \u001b[32m\"JavaScript\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"info.active\"\u001b[39m\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterComplexData(data\u001b[33m,\u001b[39m conditions)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 66 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m       {\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m         id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m         tags\u001b[33m:\u001b[39m [\u001b[32m\"React\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"JavaScript\"\u001b[39m]\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m복잡한-데이터-필터링.test.js\u001b[2m:66:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)복잡한-데이터-필터링.js 테스트 › 조건을 만족하는 데이터가 없으면 빈 배열을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m conditions \u001b[33m=\u001b[39m { tags\u001b[33m:\u001b[39m \u001b[32m\"JavaScript\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterComplexData(data\u001b[33m,\u001b[39m conditions)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 86 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m복잡한-데이터-필터링.test.js\u001b[2m:83:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)복잡한-데이터-필터링.test.js","startTime":1738890640711,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)retry.js 테스트"],"duration":4,"failureDetails":[{"matcherResult":{"expected":"success","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"success\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"success\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)retry.test.js:11:20)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"(lv.3)retry.js 테스트 성공 시, 즉시 resolve되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"성공 시, 즉시 resolve되어야 한다."},{"ancestorTitles":["(lv.3)retry.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"final-success","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"final-success\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"final-success\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)retry.test.js:25:20)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"(lv.3)retry.js 테스트 최대 재시도 횟수 안에 성공하면, 성공 값을 resolve해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"최대 재시도 횟수 안에 성공하면, 성공 값을 resolve해야 한다."},{"ancestorTitles":["(lv.3)retry.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoMatch\u001b[2m()\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a promise or a function returning a promise\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.toMatch (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\expect\\build\\index.js:204:13)\n    at Object.toMatch (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)retry.test.js:35:59)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)retry.js 테스트 모든 시도가 실패하면, 마지막 에러를 reject해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"모든 시도가 실패하면, 마지막 에러를 reject해야 한다."},{"ancestorTitles":["(lv.3)retry.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a promise or a function returning a promise\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\expect\\build\\index.js:204:13)\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)retry.test.js:45:59)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)retry.js 테스트 retries가 0이면 한 번만 시도해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"retries가 0이면 한 번만 시도해야 한다."}],"endTime":1738890642574,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)retry.js 테스트 › 성공 시, 즉시 resolve되어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"success\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m retryRequest(promiseFactory\u001b[33m,\u001b[39m \u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"success\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     expect(callCount)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)\u001b[22m\u001b[2mretry.test.js\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)retry.js 테스트 › 최대 재시도 횟수 안에 성공하면, 성공 값을 resolve해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"final-success\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m retryRequest(promiseFactory\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"final-success\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     expect(failCount)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)\u001b[22m\u001b[2mretry.test.js\u001b[2m:25:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)retry.js 테스트 › 모든 시도가 실패하면, 마지막 에러를 reject해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoMatch\u001b[2m()\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a promise or a function returning a promise\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mreject(\u001b[32m`error-${callCount}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m     \u001b[36mawait\u001b[39m expect(retryRequest(promiseFactory\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoMatch(\u001b[32m\"error-3\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m     expect(callCount)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toMatch (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:204:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toMatch (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)\u001b[22m\u001b[2mretry.test.js\u001b[2m:35:59)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)retry.js 테스트 › retries가 0이면 한 번만 시도해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoBe\u001b[2m()\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must be a promise or a function returning a promise\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m       \u001b[36mreturn\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mreject(\u001b[32m\"always fail\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m     \u001b[36mawait\u001b[39m expect(retryRequest(promiseFactory\u001b[33m,\u001b[39m \u001b[35m0\u001b[39m))\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoBe(\u001b[32m\"always fail\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     expect(callCount)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:204:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)\u001b[22m\u001b[2mretry.test.js\u001b[2m:45:59)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.5)retry.test.js","startTime":1738890642382,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)지정된-key-추출하기.js 테스트"],"duration":14,"failureDetails":[{"matcherResult":{"expected":{"b":2,"c":3},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"b\": 2, \"c\": 3}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"b\": 2, \"c\": 3}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js:8:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)지정된-key-추출하기.js 테스트 지정된 key만 추출해서 새 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"지정된 key만 추출해서 새 객체를 반환해야 한다."},{"ancestorTitles":["(lv.3)지정된-key-추출하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"y":20},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"y\": 20}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"y\": 20}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js:15:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)지정된-key-추출하기.js 테스트 존재하지 않는 key는 무시해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"존재하지 않는 key는 무시해야 한다."},{"ancestorTitles":["(lv.3)지정된-key-추출하기.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":{},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js:22:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)지정된-key-추출하기.js 테스트 키 배열이 비어있으면 빈 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"키 배열이 비어있으면 빈 객체를 반환해야 한다."},{"ancestorTitles":["(lv.3)지정된-key-추출하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js:29:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)지정된-key-추출하기.js 테스트 obj에 key가 하나도 없을 때도 올바르게 동작해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"obj에 key가 하나도 없을 때도 올바르게 동작해야 한다."},{"ancestorTitles":["(lv.3)지정된-key-추출하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"a":1},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"a\": 1}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"a\": 1}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js:36:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)지정된-key-추출하기.js 테스트 원본 객체에 없는 key는 결과 객체에 없어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"원본 객체에 없는 key는 결과 객체에 없어야 한다."}],"endTime":1738890642614,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)지정된-key-추출하기.js 테스트 › 지정된 key만 추출해서 새 객체를 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"b\": 2, \"c\": 3}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  6 |\u001b[39m     \u001b[36mconst\u001b[39m keys \u001b[33m=\u001b[39m [\u001b[32m\"b\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"c\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  7 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m pickKeys(obj\u001b[33m,\u001b[39m keys)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  8 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({ b\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m c\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   it(\u001b[32m\"존재하지 않는 key는 무시해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m지정된-key-추출하기.test.js\u001b[2m:8:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)지정된-key-추출하기.js 테스트 › 존재하지 않는 key는 무시해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"y\": 20}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m     \u001b[36mconst\u001b[39m keys \u001b[33m=\u001b[39m [\u001b[32m\"y\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"z\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m pickKeys(obj\u001b[33m,\u001b[39m keys)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({ y\u001b[33m:\u001b[39m \u001b[35m20\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m   it(\u001b[32m\"키 배열이 비어있으면 빈 객체를 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m지정된-key-추출하기.test.js\u001b[2m:15:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)지정된-key-추출하기.js 테스트 › 키 배열이 비어있으면 빈 객체를 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m     \u001b[36mconst\u001b[39m keys \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m pickKeys(obj\u001b[33m,\u001b[39m keys)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   it(\u001b[32m\"obj에 key가 하나도 없을 때도 올바르게 동작해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m지정된-key-추출하기.test.js\u001b[2m:22:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)지정된-key-추출하기.js 테스트 › obj에 key가 하나도 없을 때도 올바르게 동작해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mconst\u001b[39m keys \u001b[33m=\u001b[39m [\u001b[32m\"a\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"b\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m pickKeys(obj\u001b[33m,\u001b[39m keys)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 29 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m   it(\u001b[32m\"원본 객체에 없는 key는 결과 객체에 없어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m지정된-key-추출하기.test.js\u001b[2m:29:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)지정된-key-추출하기.js 테스트 › 원본 객체에 없는 key는 결과 객체에 없어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"a\": 1}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m     \u001b[36mconst\u001b[39m keys \u001b[33m=\u001b[39m [\u001b[32m\"a\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"b\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"c\"\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m pickKeys(obj\u001b[33m,\u001b[39m keys)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({ a\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m지정된-key-추출하기.test.js\u001b[2m:36:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)지정된-key-추출하기.test.js","startTime":1738890640711,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)재귀함수.js 테스트"],"duration":16,"failureDetails":[{"matcherResult":{"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js:5:26)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)재귀함수.js 테스트 n이 0 이하이면 1을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"n이 0 이하이면 1을 반환해야 한다."},{"ancestorTitles":["(lv.3)재귀함수.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js:10:26)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)재귀함수.js 테스트 n이 1이면 1을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"n이 1이면 1을 반환해야 한다."},{"ancestorTitles":["(lv.3)재귀함수.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":2,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js:14:26)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)재귀함수.js 테스트 n이 2이면 2를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"n이 2이면 2를 반환해야 한다."},{"ancestorTitles":["(lv.3)재귀함수.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":120,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m120\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m120\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js:18:26)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)재귀함수.js 테스트 n이 5이면 120을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"n이 5이면 120을 반환해야 한다."},{"ancestorTitles":["(lv.3)재귀함수.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":3628800,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m3628800\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m3628800\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js:22:27)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)재귀함수.js 테스트 n이 10이면 3628800을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"n이 10이면 3628800을 반환해야 한다."}],"endTime":1738890642616,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)재귀함수.js 테스트 › n이 0 이하이면 1을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"(lv.3)재귀함수.js 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"n이 0 이하이면 1을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(factorial(\u001b[35m0\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m     expect(factorial(\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m재귀함수.test.js\u001b[2m:5:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)재귀함수.js 테스트 › n이 1이면 1을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"n이 1이면 1을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(factorial(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"n이 2이면 2를 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m재귀함수.test.js\u001b[2m:10:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)재귀함수.js 테스트 › n이 2이면 2를 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m2\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"n이 2이면 2를 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m     expect(factorial(\u001b[35m2\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   it(\u001b[32m\"n이 5이면 120을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m재귀함수.test.js\u001b[2m:14:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)재귀함수.js 테스트 › n이 5이면 120을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m120\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   it(\u001b[32m\"n이 5이면 120을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 18 |\u001b[39m     expect(factorial(\u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m120\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   it(\u001b[32m\"n이 10이면 3628800을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m재귀함수.test.js\u001b[2m:18:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)재귀함수.js 테스트 › n이 10이면 3628800을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m3628800\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m   it(\u001b[32m\"n이 10이면 3628800을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     expect(factorial(\u001b[35m10\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m3628800\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m재귀함수.test.js\u001b[2m:22:27)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)재귀함수.test.js","startTime":1738890640714,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)Debounce-함수-구현.js 테스트"],"duration":13,"failureDetails":[{}],"failureMessages":["TypeError: debounced is not a function\n    at Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)debounce.test.js:17:5)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)Debounce-함수-구현.js 테스트 delay 시간이 지나기 전에는 함수가 실행되지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"delay 시간이 지나기 전에는 함수가 실행되지 않아야 한다."},{"ancestorTitles":["(lv.3)Debounce-함수-구현.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: debounced is not a function\n    at Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)debounce.test.js:28:5)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)Debounce-함수-구현.js 테스트 delay 이내에 여러 번 호출해도, 마지막 호출 후 delay가 지난 시점에만 실행되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"delay 이내에 여러 번 호출해도, 마지막 호출 후 delay가 지난 시점에만 실행되어야 한다."},{"ancestorTitles":["(lv.3)Debounce-함수-구현.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: debounced is not a function\n    at Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)debounce.test.js:43:5)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)Debounce-함수-구현.js 테스트 delay가 지나기 전에 다시 호출하면 타이머가 리셋되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"delay가 지나기 전에 다시 호출하면 타이머가 리셋되어야 한다."},{"ancestorTitles":["(lv.3)Debounce-함수-구현.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: debounced is not a function\n    at Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)debounce.test.js:57:5)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)Debounce-함수-구현.js 테스트 호출 시 전달된 인자를 그대로 func에 넘겨야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"호출 시 전달된 인자를 그대로 func에 넘겨야 한다."}],"endTime":1738890642650,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)Debounce-함수-구현.js 테스트 › delay 시간이 지나기 전에는 함수가 실행되지 않아야 한다.\u001b[39m\u001b[22m\n\n    TypeError: debounced is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m     \u001b[36mconst\u001b[39m debounced \u001b[33m=\u001b[39m debounce(mockFn\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m     expect(mockFn)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m     jest\u001b[33m.\u001b[39madvanceTimersByTime(\u001b[35m499\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)\u001b[22m\u001b[2mdebounce.test.js\u001b[2m:17:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)Debounce-함수-구현.js 테스트 › delay 이내에 여러 번 호출해도, 마지막 호출 후 delay가 지난 시점에만 실행되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: debounced is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m debounced \u001b[33m=\u001b[39m debounce(mockFn\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 28 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)\u001b[22m\u001b[2mdebounce.test.js\u001b[2m:28:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)Debounce-함수-구현.js 테스트 › delay가 지나기 전에 다시 호출하면 타이머가 리셋되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: debounced is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m     \u001b[36mconst\u001b[39m debounced \u001b[33m=\u001b[39m debounce(mockFn\u001b[33m,\u001b[39m \u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     jest\u001b[33m.\u001b[39madvanceTimersByTime(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m     debounced()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     jest\u001b[33m.\u001b[39madvanceTimersByTime(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)\u001b[22m\u001b[2mdebounce.test.js\u001b[2m:43:5)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)Debounce-함수-구현.js 테스트 › 호출 시 전달된 인자를 그대로 func에 넘겨야 한다.\u001b[39m\u001b[22m\n\n    TypeError: debounced is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 |\u001b[39m     \u001b[36mconst\u001b[39m debounced \u001b[33m=\u001b[39m debounce(mockFn\u001b[33m,\u001b[39m \u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 57 |\u001b[39m     debounced(\u001b[32m\"hello\"\u001b[39m\u001b[33m,\u001b[39m \u001b[35m123\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m     jest\u001b[33m.\u001b[39madvanceTimersByTime(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m     expect(mockFn)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m\"hello\"\u001b[39m\u001b[33m,\u001b[39m \u001b[35m123\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.debounced (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)\u001b[22m\u001b[2mdebounce.test.js\u001b[2m:57:5)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)debounce.test.js","startTime":1738890640723,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":20,"failureDetails":[{"matcherResult":{"expected":0,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:8:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 예약 목록이 비어 있으면 0부터 예약 가능해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"예약 목록이 비어 있으면 0부터 예약 가능해야 한다."},{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":12,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m12\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m12\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:16:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 첫 예약 전 시간은 사용하지 않으므로, (0~첫예약.start)는 무시한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"첫 예약 전 시간은 사용하지 않으므로, (0~첫예약.start)는 무시한다."},{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":12,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m12\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m12\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:27:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 인접한 예약 사이에 충분한 간격이 있으면 그 시점을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"인접한 예약 사이에 충분한 간격이 있으면 그 시점을 반환해야 한다."},{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":6,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m6\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m6\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:38:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 모든 간격이 부족하면 마지막 예약 이후 시점을 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"모든 간격이 부족하면 마지막 예약 이후 시점을 반환한다."},{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":7,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m7\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m7\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:50:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 연속되거나 겹친 예약들만 있을 때도 마지막 예약 이후 시점을 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"연속되거나 겹친 예약들만 있을 때도 마지막 예약 이후 시점을 반환한다."},{"ancestorTitles":["(lv.4)시간-예약-시스템.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":7,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m7\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m7\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js:61:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)시간-예약-시스템.js 테스트 timeLength가 커서 모든 간격이 부족할 때도 마지막 예약 이후 반환","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"timeLength가 커서 모든 간격이 부족할 때도 마지막 예약 이후 반환"}],"endTime":1738890642683,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › 예약 목록이 비어 있으면 0부터 예약 가능해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  6 |\u001b[39m     \u001b[36mconst\u001b[39m timeLength \u001b[33m=\u001b[39m \u001b[35m2\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  7 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  8 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   it(\u001b[32m\"첫 예약 전 시간은 사용하지 않으므로, (0~첫예약.start)는 무시한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:8:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › 첫 예약 전 시간은 사용하지 않으므로, (0~첫예약.start)는 무시한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m12\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m12\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   it(\u001b[32m\"인접한 예약 사이에 충분한 간격이 있으면 그 시점을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:16:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › 인접한 예약 사이에 충분한 간격이 있으면 그 시점을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m12\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m12\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m   it(\u001b[32m\"모든 간격이 부족하면 마지막 예약 이후 시점을 반환한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:27:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › 모든 간격이 부족하면 마지막 예약 이후 시점을 반환한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m6\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 38 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m   it(\u001b[32m\"연속되거나 겹친 예약들만 있을 때도 마지막 예약 이후 시점을 반환한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:38:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › 연속되거나 겹친 예약들만 있을 때도 마지막 예약 이후 시점을 반환한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m7\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m   it(\u001b[32m\"timeLength가 커서 모든 간격이 부족할 때도 마지막 예약 이후 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:50:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)시간-예약-시스템.js 테스트 › timeLength가 커서 모든 간격이 부족할 때도 마지막 예약 이후 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m7\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m scheduleNextAvailableTime(reservations\u001b[33m,\u001b[39m timeLength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoBe(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m시간-예약-시스템.test.js\u001b[2m:61:20)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)시간-예약-시스템.test.js","startTime":1738890640740,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)데이터-정규화.js 테스트"],"duration":5,"failureDetails":[{"matcherResult":{"expected":{"byId":{},"allIds":[]},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [], \"byId\": {}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [], \"byId\": {}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)데이터-정규화.test.js:6:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)데이터-정규화.js 테스트 빈 배열을 입력하면 byId는 빈 객체, allIds는 빈 배열이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"빈 배열을 입력하면 byId는 빈 객체, allIds는 빈 배열이어야 한다."},{"ancestorTitles":["(lv.4)데이터-정규화.js 테스트"],"duration":5,"failureDetails":[{"matcherResult":{"expected":{"byId":{"1":{"id":1,"name":"A"}},"allIds":[1]},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [1], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [1], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)데이터-정규화.test.js:12:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)데이터-정규화.js 테스트 단일 항목이 주어지면 해당 항목의 id를 키로 하는 객체와, id가 담긴 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"단일 항목이 주어지면 해당 항목의 id를 키로 하는 객체와, id가 담긴 배열을 반환해야 한다."},{"ancestorTitles":["(lv.4)데이터-정규화.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"byId":{"1":{"id":1,"name":"A"},"2":{"id":2,"name":"B"},"3":{"id":3,"name":"C"}},"allIds":[1,2,3]},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [1, 2, 3], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}, \"2\": {\"id\": 2, \"name\": \"B\"}, \"3\": {\"id\": 3, \"name\": \"C\"}}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"allIds\": [1, 2, 3], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}, \"2\": {\"id\": 2, \"name\": \"B\"}, \"3\": {\"id\": 3, \"name\": \"C\"}}}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)데이터-정규화.test.js:27:20)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)데이터-정규화.js 테스트 여러 항목이 주어지면 각각의 id를 키로 하는 객체 집합과, 해당 id 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"여러 항목이 주어지면 각각의 id를 키로 하는 객체 집합과, 해당 id 배열을 반환해야 한다."},{"ancestorTitles":["(lv.4)데이터-정규화.js 테스트"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'allIds')\n    at Object.allIds (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)데이터-정규화.test.js:44:19)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.4)데이터-정규화.js 테스트 id가 섞여 있어도 입력 순서대로 allIds를 담아야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"id가 섞여 있어도 입력 순서대로 allIds를 담아야 한다."}],"endTime":1738890642691,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)데이터-정규화.js 테스트 › 빈 배열을 입력하면 byId는 빈 객체, allIds는 빈 배열이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"allIds\": [], \"byId\": {}}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"빈 배열을 입력하면 byId는 빈 객체, allIds는 빈 배열이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeData([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({ byId\u001b[33m:\u001b[39m {}\u001b[33m,\u001b[39m allIds\u001b[33m:\u001b[39m [] })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"단일 항목이 주어지면 해당 항목의 id를 키로 하는 객체와, id가 담긴 배열을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m데이터-정규화.test.js\u001b[2m:6:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)데이터-정규화.js 테스트 › 단일 항목이 주어지면 해당 항목의 id를 키로 하는 객체와, id가 담긴 배열을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"allIds\": [1], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}}}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m [{ id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"A\"\u001b[39m }]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeData(data)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 12 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m       byId\u001b[33m:\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m         \u001b[35m1\u001b[39m\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"A\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m       }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m데이터-정규화.test.js\u001b[2m:12:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)데이터-정규화.js 테스트 › 여러 항목이 주어지면 각각의 id를 키로 하는 객체 집합과, 해당 id 배열을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"allIds\": [1, 2, 3], \"byId\": {\"1\": {\"id\": 1, \"name\": \"A\"}, \"2\": {\"id\": 2, \"name\": \"B\"}, \"3\": {\"id\": 3, \"name\": \"C\"}}}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeData(data)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m       byId\u001b[33m:\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m         \u001b[35m1\u001b[39m\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"A\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m         \u001b[35m2\u001b[39m\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"B\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m데이터-정규화.test.js\u001b[2m:27:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.4)데이터-정규화.js 테스트 › id가 섞여 있어도 입력 순서대로 allIds를 담아야 한다.\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'allIds')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeData(data)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 |\u001b[39m     expect(result\u001b[33m.\u001b[39mallIds)\u001b[33m.\u001b[39mtoEqual([\u001b[35m10\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m7\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m     expect(result\u001b[33m.\u001b[39mbyId)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m       \u001b[35m10\u001b[39m\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"X\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       \u001b[35m5\u001b[39m\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"Y\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.allIds (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)\u001b[22m\u001b[2m데이터-정규화.test.js\u001b[2m:44:19)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.4)데이터-정규화.test.js","startTime":1738890642503,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)문자열-토글-케이스.js 테스트"],"duration":12,"failureDetails":[{"matcherResult":{"expected":"aBC123","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"aBC123\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"aBC123\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)문자열-토글-케이스.test.js:5:34)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.2)문자열-토글-케이스.js 테스트 모든 소문자를 대문자로, 대문자를 소문자로 바꿔야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"모든 소문자를 대문자로, 대문자를 소문자로 바꿔야 한다."},{"ancestorTitles":["(lv.2)문자열-토글-케이스.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":"tEST!@#","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"tEST!@#\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"tEST!@#\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)문자열-토글-케이스.test.js:10:35)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.2)문자열-토글-케이스.js 테스트 알파벳 이외의 문자는 변경하지 않는다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"알파벳 이외의 문자는 변경하지 않는다."},{"ancestorTitles":["(lv.2)문자열-토글-케이스.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)문자열-토글-케이스.test.js:14:28)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.2)문자열-토글-케이스.js 테스트 빈 문자열을 입력하면 빈 문자열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"빈 문자열을 입력하면 빈 문자열을 반환해야 한다."},{"ancestorTitles":["(lv.2)문자열-토글-케이스.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":"ABC","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"ABC\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"ABC\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)문자열-토글-케이스.test.js:18:31)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.2)문자열-토글-케이스.js 테스트 이미 모두 소문자이거나 모두 대문자인 경우 올바르게 변환된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"이미 모두 소문자이거나 모두 대문자인 경우 올바르게 변환된다."}],"endTime":1738890642820,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.2)문자열-토글-케이스.js 테스트 › 모든 소문자를 대문자로, 대문자를 소문자로 바꿔야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"aBC123\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"(lv.2)문자열-토글-케이스.js 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"모든 소문자를 대문자로, 대문자를 소문자로 바꿔야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(toggleCase(\u001b[32m\"Abc123\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"aBC123\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m     expect(toggleCase(\u001b[32m\"HELLOworld\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"helloWORLD\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m문자열-토글-케이스.test.js\u001b[2m:5:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.2)문자열-토글-케이스.js 테스트 › 알파벳 이외의 문자는 변경하지 않는다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"tEST!@#\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"알파벳 이외의 문자는 변경하지 않는다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(toggleCase(\u001b[32m\"Test!@#\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"tEST!@#\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"빈 문자열을 입력하면 빈 문자열을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m문자열-토글-케이스.test.js\u001b[2m:10:35)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.2)문자열-토글-케이스.js 테스트 › 빈 문자열을 입력하면 빈 문자열을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"빈 문자열을 입력하면 빈 문자열을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m     expect(toggleCase(\u001b[32m\"\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   it(\u001b[32m\"이미 모두 소문자이거나 모두 대문자인 경우 올바르게 변환된다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m문자열-토글-케이스.test.js\u001b[2m:14:28)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.2)문자열-토글-케이스.js 테스트 › 이미 모두 소문자이거나 모두 대문자인 경우 올바르게 변환된다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"ABC\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   it(\u001b[32m\"이미 모두 소문자이거나 모두 대문자인 경우 올바르게 변환된다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 18 |\u001b[39m     expect(toggleCase(\u001b[32m\"abc\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"ABC\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     expect(toggleCase(\u001b[32m\"XYZ\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m\"xyz\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m문자열-토글-케이스.test.js\u001b[2m:18:31)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)문자열-토글-케이스.test.js","startTime":1738890640863,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)쿼리-스트링-파싱하기.js 테스트"],"duration":14,"failureDetails":[{"matcherResult":{"expected":{},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js:5:34)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)쿼리-스트링-파싱하기.js 테스트 빈 문자열이거나 '?'만 있으면 빈 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"빈 문자열이거나 '?'만 있으면 빈 객체를 반환해야 한다."},{"ancestorTitles":["(lv.3)쿼리-스트링-파싱하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"search":"apple"},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"search\": \"apple\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"search\": \"apple\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js:10:47)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)쿼리-스트링-파싱하기.js 테스트 단일 쿼리 파라미터를 올바르게 파싱해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"단일 쿼리 파라미터를 올바르게 파싱해야 한다."},{"ancestorTitles":["(lv.3)쿼리-스트링-파싱하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"search":"apple","page":"2"},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"page\": \"2\", \"search\": \"apple\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"page\": \"2\", \"search\": \"apple\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js:14:54)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)쿼리-스트링-파싱하기.js 테스트 여러 쿼리 파라미터를 올바르게 파싱해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"여러 쿼리 파라미터를 올바르게 파싱해야 한다."},{"ancestorTitles":["(lv.3)쿼리-스트링-파싱하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"search":""},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"search\": \"\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"search\": \"\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js:21:42)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)쿼리-스트링-파싱하기.js 테스트 값이 없는 경우 빈 문자열로 처리해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"값이 없는 경우 빈 문자열로 처리해야 한다."},{"ancestorTitles":["(lv.3)쿼리-스트링-파싱하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":{"filter":"","sort":"desc"},"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"filter\": \"\", \"sort\": \"desc\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m{\"filter\": \"\", \"sort\": \"desc\"}\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js:26:51)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)쿼리-스트링-파싱하기.js 테스트 키=값 형태가 아닌 항목이 있으면 값은 빈 문자열로 처리해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"키=값 형태가 아닌 항목이 있으면 값은 빈 문자열로 처리해야 한다."}],"endTime":1738890642825,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)쿼리-스트링-파싱하기.js 테스트 › 빈 문자열이거나 '?'만 있으면 빈 객체를 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"(lv.3)쿼리-스트링-파싱하기.js 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"빈 문자열이거나 '?'만 있으면 빈 객체를 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(parseQueryString(\u001b[32m\"\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({})\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m쿼리-스트링-파싱하기.test.js\u001b[2m:5:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)쿼리-스트링-파싱하기.js 테스트 › 단일 쿼리 파라미터를 올바르게 파싱해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"search\": \"apple\"}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"단일 쿼리 파라미터를 올바르게 파싱해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?search=apple\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({ search\u001b[33m:\u001b[39m \u001b[32m\"apple\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"여러 쿼리 파라미터를 올바르게 파싱해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m쿼리-스트링-파싱하기.test.js\u001b[2m:10:47)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)쿼리-스트링-파싱하기.js 테스트 › 여러 쿼리 파라미터를 올바르게 파싱해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"page\": \"2\", \"search\": \"apple\"}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"여러 쿼리 파라미터를 올바르게 파싱해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?search=apple&page=2\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m       search\u001b[33m:\u001b[39m \u001b[32m\"apple\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m       page\u001b[33m:\u001b[39m \u001b[32m\"2\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m쿼리-스트링-파싱하기.test.js\u001b[2m:14:54)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)쿼리-스트링-파싱하기.js 테스트 › 값이 없는 경우 빈 문자열로 처리해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"search\": \"\"}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   it(\u001b[32m\"값이 없는 경우 빈 문자열로 처리해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 21 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?search=\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({ search\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?key&flag=\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({ key\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m flag\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m쿼리-스트링-파싱하기.test.js\u001b[2m:21:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)쿼리-스트링-파싱하기.js 테스트 › 키=값 형태가 아닌 항목이 있으면 값은 빈 문자열로 처리해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m{\"filter\": \"\", \"sort\": \"desc\"}\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   it(\u001b[32m\"키=값 형태가 아닌 항목이 있으면 값은 빈 문자열로 처리해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     expect(parseQueryString(\u001b[32m\"?filter&sort=desc\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m       filter\u001b[33m:\u001b[39m \u001b[32m\"\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m       sort\u001b[33m:\u001b[39m \u001b[32m\"desc\"\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m쿼리-스트링-파싱하기.test.js\u001b[2m:26:51)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)쿼리-스트링-파싱하기.test.js","startTime":1738890640859,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)사용자-권한-확인하기.js 테스트"],"duration":11,"failureDetails":[{"matcherResult":{"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)사용자-권한-확인하기.test.js:6:39)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)사용자-권한-확인하기.js 테스트 admin은 모든 권한에 접근 가능해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"admin은 모든 권한에 접근 가능해야 한다."},{"ancestorTitles":["(lv.3)사용자-권한-확인하기.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)사용자-권한-확인하기.test.js:13:39)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)사용자-권한-확인하기.js 테스트 manager는 manager 이하 권한에만 접근 가능해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"manager는 manager 이하 권한에만 접근 가능해야 한다."},{"ancestorTitles":["(lv.3)사용자-권한-확인하기.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)사용자-권한-확인하기.test.js:20:39)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)사용자-권한-확인하기.js 테스트 user는 user 권한에만 접근 가능해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"user는 user 권한에만 접근 가능해야 한다."},{"ancestorTitles":["(lv.3)사용자-권한-확인하기.js 테스트"],"duration":0,"failureDetails":[{"matcherResult":{"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)사용자-권한-확인하기.test.js:27:39)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)사용자-권한-확인하기.js 테스트 알 수 없는 role이라면 권한이 없는 것으로 처리해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"알 수 없는 role이라면 권한이 없는 것으로 처리해야 한다."}],"endTime":1738890642847,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)사용자-권한-확인하기.js 테스트 › admin은 모든 권한에 접근 가능해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"admin은 모든 권한에 접근 가능해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m     \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Alice\"\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m\"admin\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"user\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"manager\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"admin\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m사용자-권한-확인하기.test.js\u001b[2m:6:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)사용자-권한-확인하기.js 테스트 › manager는 manager 이하 권한에만 접근 가능해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 11 |\u001b[39m   it(\u001b[32m\"manager는 manager 이하 권한에만 접근 가능해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Bob\"\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m\"manager\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 13 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"user\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"manager\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"admin\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m사용자-권한-확인하기.test.js\u001b[2m:13:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)사용자-권한-확인하기.js 테스트 › user는 user 권한에만 접근 가능해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m   it(\u001b[32m\"user는 user 권한에만 접근 가능해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Charlie\"\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m\"user\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"user\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"manager\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"admin\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m사용자-권한-확인하기.test.js\u001b[2m:20:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)사용자-권한-확인하기.js 테스트 › 알 수 없는 role이라면 권한이 없는 것으로 처리해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m   it(\u001b[32m\"알 수 없는 role이라면 권한이 없는 것으로 처리해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m { name\u001b[33m:\u001b[39m \u001b[32m\"Unknown\"\u001b[39m\u001b[33m,\u001b[39m role\u001b[33m:\u001b[39m \u001b[32m\"guest\"\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m     expect(checkAccess(user\u001b[33m,\u001b[39m \u001b[32m\"user\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m사용자-권한-확인하기.test.js\u001b[2m:27:39)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)사용자-권한-확인하기.test.js","startTime":1738890640936,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)비동기-데이터-병합하기.js 테스트"],"duration":16,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"name":"Alice"},{"id":2,"age":20}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)비동기-데이터-병합하기.test.js:10:20)"],"fullName":"(lv.3)비동기-데이터-병합하기.js 테스트 단일 비동기 함수에서 반환된 배열만 병합하면 동일한 결과가 나와야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"단일 비동기 함수에서 반환된 배열만 병합하면 동일한 결과가 나와야 한다."},{"ancestorTitles":["(lv.3)비동기-데이터-병합하기.js 테스트"],"duration":2,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"name":"Alice","age":25},{"id":2,"age":20},{"id":3,"gender":"F"}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"age\": 25, \"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}, {\"gender\": \"F\", \"id\": 3}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"age\": 25, \"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}, {\"gender\": \"F\", \"id\": 3}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)비동기-데이터-병합하기.test.js:26:20)"],"fullName":"(lv.3)비동기-데이터-병합하기.js 테스트 여러 비동기 함수가 반환한 객체들을 id 기준으로 병합해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"여러 비동기 함수가 반환한 객체들을 id 기준으로 병합해야 한다."},{"ancestorTitles":["(lv.3)비동기-데이터-병합하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":[{"id":1,"value":"B1"},{"id":2,"value":"A2"},{"id":3,"value":"B3"}],"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"value\": \"B1\"}, {\"id\": 2, \"value\": \"A2\"}, {\"id\": 3, \"value\": \"B3\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"value\": \"B1\"}, {\"id\": 2, \"value\": \"A2\"}, {\"id\": 3, \"value\": \"B3\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)비동기-데이터-병합하기.test.js:44:20)"],"fullName":"(lv.3)비동기-데이터-병합하기.js 테스트 나중에 도착한 데이터가 우선 덮어써야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"나중에 도착한 데이터가 우선 덮어써야 한다."},{"ancestorTitles":["(lv.3)비동기-데이터-병합하기.js 테스트"],"duration":21,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'map')\n    at Object.map (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)비동기-데이터-병합하기.test.js:61:19)"],"fullName":"(lv.3)비동기-데이터-병합하기.js 테스트 최종 배열은 id 오름차순으로 정렬되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"최종 배열은 id 오름차순으로 정렬되어야 한다."}],"endTime":1738890642851,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)비동기-데이터-병합하기.js 테스트 › 단일 비동기 함수에서 반환된 배열만 병합하면 동일한 결과가 나와야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m asyncDataMerger(fnA)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"Alice\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m age\u001b[33m:\u001b[39m \u001b[35m20\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m비동기-데이터-병합하기.test.js\u001b[2m:10:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)비동기-데이터-병합하기.js 테스트 › 여러 비동기 함수가 반환한 객체들을 id 기준으로 병합해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"age\": 25, \"id\": 1, \"name\": \"Alice\"}, {\"age\": 20, \"id\": 2}, {\"gender\": \"F\", \"id\": 3}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m asyncDataMerger(fnA\u001b[33m,\u001b[39m fnB)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m name\u001b[33m:\u001b[39m \u001b[32m\"Alice\"\u001b[39m\u001b[33m,\u001b[39m age\u001b[33m:\u001b[39m \u001b[35m25\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m age\u001b[33m:\u001b[39m \u001b[35m20\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m gender\u001b[33m:\u001b[39m \u001b[32m\"F\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m비동기-데이터-병합하기.test.js\u001b[2m:26:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)비동기-데이터-병합하기.js 테스트 › 나중에 도착한 데이터가 우선 덮어써야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"value\": \"B1\"}, {\"id\": 2, \"value\": \"A2\"}, {\"id\": 3, \"value\": \"B3\"}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 |\u001b[39m     \u001b[90m// 기대: id=1 은 B1으로 덮어씀\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m asyncDataMerger(fnA\u001b[33m,\u001b[39m fnB)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m value\u001b[33m:\u001b[39m \u001b[32m\"B1\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m value\u001b[33m:\u001b[39m \u001b[32m\"A2\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m value\u001b[33m:\u001b[39m \u001b[32m\"B3\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m비동기-데이터-병합하기.test.js\u001b[2m:44:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)비동기-데이터-병합하기.js 테스트 › 최종 배열은 id 오름차순으로 정렬되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'map')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m asyncDataMerger(fnX\u001b[33m,\u001b[39m fnY)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m     expect(result\u001b[33m.\u001b[39mmap((obj) \u001b[33m=>\u001b[39m obj\u001b[33m.\u001b[39mid))\u001b[33m.\u001b[39mtoEqual([\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m7\u001b[39m\u001b[33m,\u001b[39m \u001b[35m10\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.map (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m비동기-데이터-병합하기.test.js\u001b[2m:61:19)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)비동기-데이터-병합하기.test.js","startTime":1738890640815,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)상품-할인하기.js 테스트"],"duration":4,"failureDetails":[{"matcherResult":{"expected":10000,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js:5:38)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)상품-할인하기.js 테스트 쿠폰이 없으면 상품 가격 그대로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"쿠폰이 없으면 상품 가격 그대로 반환해야 한다."},{"ancestorTitles":["(lv.3)상품-할인하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":8000,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m8000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m8000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js:11:46)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)상품-할인하기.js 테스트 percent 타입 쿠폰을 적용하면 해당 퍼센트만큼 할인해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"percent 타입 쿠폰을 적용하면 해당 퍼센트만큼 할인해야 한다."},{"ancestorTitles":["(lv.3)상품-할인하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":9000,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m9000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m9000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js:16:46)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)상품-할인하기.js 테스트 fixed 타입 쿠폰을 적용하면 고정 금액만큼 할인해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"fixed 타입 쿠폰을 적용하면 고정 금액만큼 할인해야 한다."},{"ancestorTitles":["(lv.3)상품-할인하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":0,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js:21:46)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)상품-할인하기.js 테스트 fixed 타입 쿠폰 적용 시, 할인 금액이 상품 가격보다 크면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"fixed 타입 쿠폰 적용 시, 할인 금액이 상품 가격보다 크면 0을 반환해야 한다."},{"ancestorTitles":["(lv.3)상품-할인하기.js 테스트"],"duration":1,"failureDetails":[{"matcherResult":{"expected":10000,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10000\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js:29:54)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.3)상품-할인하기.js 테스트 coupon 객체가 이상하거나 속성이 없으면 할인 없이 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"coupon 객체가 이상하거나 속성이 없으면 할인 없이 반환한다."}],"endTime":1738890642861,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)상품-할인하기.js 테스트 › 쿠폰이 없으면 상품 가격 그대로 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m10000\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"(lv.3)상품-할인하기.js 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"쿠폰이 없으면 상품 가격 그대로 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m10000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m     expect(calculateDiscount(\u001b[35m5000\u001b[39m\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[35m5000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m상품-할인하기.test.js\u001b[2m:5:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)상품-할인하기.js 테스트 › percent 타입 쿠폰을 적용하면 해당 퍼센트만큼 할인해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m8000\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"percent 타입 쿠폰을 적용하면 해당 퍼센트만큼 할인해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m coupon \u001b[33m=\u001b[39m { type\u001b[33m:\u001b[39m \u001b[32m\"percent\"\u001b[39m\u001b[33m,\u001b[39m rate\u001b[33m:\u001b[39m \u001b[35m0.2\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m coupon))\u001b[33m.\u001b[39mtoBe(\u001b[35m8000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   it(\u001b[32m\"fixed 타입 쿠폰을 적용하면 고정 금액만큼 할인해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m상품-할인하기.test.js\u001b[2m:11:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)상품-할인하기.js 테스트 › fixed 타입 쿠폰을 적용하면 고정 금액만큼 할인해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m9000\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m   it(\u001b[32m\"fixed 타입 쿠폰을 적용하면 고정 금액만큼 할인해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     \u001b[36mconst\u001b[39m coupon \u001b[33m=\u001b[39m { type\u001b[33m:\u001b[39m \u001b[32m\"fixed\"\u001b[39m\u001b[33m,\u001b[39m amount\u001b[33m:\u001b[39m \u001b[35m1000\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m coupon))\u001b[33m.\u001b[39mtoBe(\u001b[35m9000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   it(\u001b[32m\"fixed 타입 쿠폰 적용 시, 할인 금액이 상품 가격보다 크면 0을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m상품-할인하기.test.js\u001b[2m:16:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)상품-할인하기.js 테스트 › fixed 타입 쿠폰 적용 시, 할인 금액이 상품 가격보다 크면 0을 반환해야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m   it(\u001b[32m\"fixed 타입 쿠폰 적용 시, 할인 금액이 상품 가격보다 크면 0을 반환해야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m     \u001b[36mconst\u001b[39m coupon \u001b[33m=\u001b[39m { type\u001b[33m:\u001b[39m \u001b[32m\"fixed\"\u001b[39m\u001b[33m,\u001b[39m amount\u001b[33m:\u001b[39m \u001b[35m15000\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 21 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m coupon))\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m   it(\u001b[32m\"coupon 객체가 이상하거나 속성이 없으면 할인 없이 반환한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m상품-할인하기.test.js\u001b[2m:21:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.3)상품-할인하기.js 테스트 › coupon 객체가 이상하거나 속성이 없으면 할인 없이 반환한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m10000\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mconst\u001b[39m invalidCoupon3 \u001b[33m=\u001b[39m { type\u001b[33m:\u001b[39m \u001b[32m\"unknown\"\u001b[39m\u001b[33m,\u001b[39m rate\u001b[33m:\u001b[39m \u001b[35m0.5\u001b[39m }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 29 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m invalidCoupon1))\u001b[33m.\u001b[39mtoBe(\u001b[35m10000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m invalidCoupon2))\u001b[33m.\u001b[39mtoBe(\u001b[35m10000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m     expect(calculateDiscount(\u001b[35m10000\u001b[39m\u001b[33m,\u001b[39m invalidCoupon3))\u001b[33m.\u001b[39mtoBe(\u001b[35m10000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)\u001b[22m\u001b[2m상품-할인하기.test.js\u001b[2m:29:54)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)상품-할인하기.test.js","startTime":1738890642605,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 95이면 'A'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 95이면 'A'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 90이면 'A'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 90이면 'A'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 89이면 'B'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 89이면 'B'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 80이면 'B'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 80이면 'B'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 70이면 'C'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 70이면 'C'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 69이면 'D'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 69이면 'D'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 0이면 'D'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 0이면 'D'를 반환해야 한다."},{"ancestorTitles":["(lv.1)grade-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)grade-구하기.js 테스트 점수가 100이면 'A'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"점수가 100이면 'A'를 반환해야 한다."}],"endTime":1738890642915,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\04.조건문\\(lv.1)grade-구하기.test.js","startTime":1738890642728,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.5)api-요청-제한기.js 테스트"],"duration":7,"failureDetails":[{}],"failureMessages":["TypeError: rateLimited is not a function\n    at Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-요청-제한기.test.js:23:7)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.5)api-요청-제한기.js 테스트 동시에 여러 요청을 보내도, timeWindow 내에 maxRequests 이상 실행되지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"동시에 여러 요청을 보내도, timeWindow 내에 maxRequests 이상 실행되지 않아야 한다."},{"ancestorTitles":["(lv.5)api-요청-제한기.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: rateLimited is not a function\n    at Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-요청-제한기.test.js:48:7)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.5)api-요청-제한기.js 테스트 timeWindow 이후에는 요청이 다시 허용되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"timeWindow 이후에는 요청이 다시 허용되어야 한다."},{"ancestorTitles":["(lv.5)api-요청-제한기.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: rateLimited is not a function\n    at Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-요청-제한기.test.js:72:7)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.5)api-요청-제한기.js 테스트 큐에 쌓인 요청은 순차적으로 실행되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"큐에 쌓인 요청은 순차적으로 실행되어야 한다."},{"ancestorTitles":["(lv.5)api-요청-제한기.js 테스트"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: rateLimited is not a function\n    at Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-요청-제한기.test.js:105:7)\n    at Promise.then.completed (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"(lv.5)api-요청-제한기.js 테스트 허용량보다 적은 요청 수는 즉시 처리되어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"허용량보다 적은 요청 수는 즉시 처리되어야 한다."}],"endTime":1738890642923,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.5)api-요청-제한기.js 테스트 › 동시에 여러 요청을 보내도, timeWindow 내에 maxRequests 이상 실행되지 않아야 한다.\u001b[39m\u001b[22m\n\n    TypeError: rateLimited is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall([\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m       rateLimited(tasks[\u001b[35m0\u001b[39m])\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m       rateLimited(tasks[\u001b[35m1\u001b[39m])\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m       rateLimited(tasks[\u001b[35m2\u001b[39m])\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m       rateLimited(tasks[\u001b[35m3\u001b[39m])\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)\u001b[22m\u001b[2mapi-요청-제한기.test.js\u001b[2m:23:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.5)api-요청-제한기.js 테스트 › timeWindow 이후에는 요청이 다시 허용되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: rateLimited is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m     \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall([\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 48 |\u001b[39m       rateLimited(shortTask)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m       rateLimited(shortTask)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       rateLimited(shortTask)\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)\u001b[22m\u001b[2mapi-요청-제한기.test.js\u001b[2m:48:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.5)api-요청-제한기.js 테스트 › 큐에 쌓인 요청은 순차적으로 실행되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: rateLimited is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall([\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 72 |\u001b[39m       rateLimited(createTask(\u001b[35m1\u001b[39m))\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m       rateLimited(createTask(\u001b[35m2\u001b[39m))\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m       rateLimited(createTask(\u001b[35m3\u001b[39m))\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)\u001b[22m\u001b[2mapi-요청-제한기.test.js\u001b[2m:72:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m(lv.5)api-요청-제한기.js 테스트 › 허용량보다 적은 요청 수는 즉시 처리되어야 한다.\u001b[39m\u001b[22m\n\n    TypeError: rateLimited is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall([\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 105 |\u001b[39m       rateLimited(tasks[\u001b[35m0\u001b[39m])\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m       rateLimited(tasks[\u001b[35m1\u001b[39m])\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.rateLimited (C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)\u001b[22m\u001b[2mapi-요청-제한기.test.js\u001b[2m:105:7)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-요청-제한기.test.js","startTime":1738890640863,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)Throttle.js 테스트"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Throttle.js 테스트 delay 기간 동안 여러 번 호출해도 최초 1회만 실행되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"delay 기간 동안 여러 번 호출해도 최초 1회만 실행되어야 한다."},{"ancestorTitles":["(lv.3)Throttle.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Throttle.js 테스트 delay가 지나면 다시 최초 한 번만 실행되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"delay가 지나면 다시 최초 한 번만 실행되어야 한다."},{"ancestorTitles":["(lv.3)Throttle.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Throttle.js 테스트 호출 시 인자를 그대로 func에 전달해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"호출 시 인자를 그대로 func에 전달해야 한다."}],"endTime":1738890642971,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)throttle.test.js","startTime":1738890642667,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)state-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)state-함수.js 테스트 초기 상태를 정확히 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"초기 상태를 정확히 반환해야 한다."},{"ancestorTitles":["(lv.3)state-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)state-함수.js 테스트 상태를 업데이트하면 새로운 값으로 변경되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"상태를 업데이트하면 새로운 값으로 변경되어야 한다."},{"ancestorTitles":["(lv.3)state-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)state-함수.js 테스트 여러 번 연속 업데이트도 정상 동작해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"여러 번 연속 업데이트도 정상 동작해야 한다."},{"ancestorTitles":["(lv.3)state-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)state-함수.js 테스트 객체 상태도 정상적으로 업데이트되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"객체 상태도 정상적으로 업데이트되어야 한다."}],"endTime":1738890643001,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)state-함수.test.js","startTime":1738890642680,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)once.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)once.js 테스트 첫 호출 시 fn이 실행되고, 그 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"첫 호출 시 fn이 실행되고, 그 결과를 반환해야 한다."},{"ancestorTitles":["(lv.3)once.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)once.js 테스트 두 번째 이후 호출은 fn을 재실행하지 않고 이전 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"두 번째 이후 호출은 fn을 재실행하지 않고 이전 결과를 반환해야 한다."},{"ancestorTitles":["(lv.3)once.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)once.js 테스트 인자를 전달해도 첫 호출 이후에는 다시 실행하지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"인자를 전달해도 첫 호출 이후에는 다시 실행하지 않아야 한다."}],"endTime":1738890643004,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)once.test.js","startTime":1738890642648,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 15는 '10대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 15는 '10대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 10은 '10대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 10은 '10대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 19는 '10대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 19는 '10대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 20은 '20대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 20은 '20대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 25는 '20대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 25는 '20대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 30은 '30대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 30은 '30대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 35는 '30대'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 35는 '30대'여야 한다."},{"ancestorTitles":["(lv.2)삼항-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)삼항-연산자.js 테스트 나이 40은 조건에 맞지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"나이 40은 조건에 맞지 않아야 한다."}],"endTime":1738890643051,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.2)삼항-연산자.test.js","startTime":1738890642848,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["변수-선언.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 x는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"x는 number 타입이어야 합니다."},{"ancestorTitles":["변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 y는 string 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"y는 string 타입이어야 합니다."},{"ancestorTitles":["변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 z는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"z는 boolean 타입이어야 합니다."},{"ancestorTitles":["변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 x의 값은 42이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"x의 값은 42이어야 합니다."},{"ancestorTitles":["변수-선언.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 y의 값은 \"Hello\"이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"y의 값은 \"Hello\"이어야 합니다."},{"ancestorTitles":["변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"변수-선언.js 테스트 z의 값은 true이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"z의 값은 true이어야 합니다."}],"endTime":1738890643054,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[1]변수-선언.test.js","startTime":1738890642911,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-forEach.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-forEach.js 테스트 빈 배열을 전달하면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 0을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-forEach.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-forEach.js 테스트 [1, 2, 3]을 전달하면 6을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[1, 2, 3]을 전달하면 6을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-forEach.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-forEach.js 테스트 [10, -5, 15]을 전달하면 20을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[10, -5, 15]을 전달하면 20을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-forEach.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-forEach.js 테스트 [100]을 전달하면 100을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[100]을 전달하면 100을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-forEach.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-forEach.js 테스트 forEach 메서드를 사용하여 구현해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"forEach 메서드를 사용하여 구현해야 한다."}],"endTime":1738890643072,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-forEach.test.js","startTime":1738890642865,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)폴더-탐색.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)폴더-탐색.js 테스트 최상위 폴더만 있을 때는 해당 폴더 이름만 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"최상위 폴더만 있을 때는 해당 폴더 이름만 반환해야 한다."},{"ancestorTitles":["(lv.3)폴더-탐색.js 테스트"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)폴더-탐색.js 테스트 하위 폴더가 있으면 모든 폴더 이름을 배열로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"하위 폴더가 있으면 모든 폴더 이름을 배열로 반환해야 한다."},{"ancestorTitles":["(lv.3)폴더-탐색.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)폴더-탐색.js 테스트 하위 폴더가 여러 단계로 중첩된 경우에도 재귀로 모든 폴더를 찾아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"하위 폴더가 여러 단계로 중첩된 경우에도 재귀로 모든 폴더를 찾아야 한다."},{"ancestorTitles":["(lv.3)폴더-탐색.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)폴더-탐색.js 테스트 하위 폴더가 없는 경우에도 정상 처리되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"하위 폴더가 없는 경우에도 정상 처리되어야 한다."}],"endTime":1738890643123,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)폴더-탐색.test.js","startTime":1738890642898,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[1]기본-산술-연산-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]기본-산술-연산-함수.js 테스트 add(2, 3)은 5가 되어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"add(2, 3)은 5가 되어야 합니다."},{"ancestorTitles":["(lv.2)[1]기본-산술-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]기본-산술-연산-함수.js 테스트 subtract(5, 2)는 3이 되어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract(5, 2)는 3이 되어야 합니다."},{"ancestorTitles":["(lv.2)[1]기본-산술-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]기본-산술-연산-함수.js 테스트 multiply(4, 3)은 12가 되어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply(4, 3)은 12가 되어야 합니다."},{"ancestorTitles":["(lv.2)[1]기본-산술-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]기본-산술-연산-함수.js 테스트 divide(10, 2)는 5가 되어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide(10, 2)는 5가 되어야 합니다."}],"endTime":1738890643169,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[1]기본-산술-연산-함수.test.js","startTime":1738890642953,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)api-request-재검증.js 테스트"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)api-request-재검증.js 테스트 토큰이 \"expired\" 상태이면, refreshToken() 호출 후 \"newToken\"으로 fetch를 해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"토큰이 \"expired\" 상태이면, refreshToken() 호출 후 \"newToken\"으로 fetch를 해야 한다."},{"ancestorTitles":["(lv.4)api-request-재검증.js 테스트"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)api-request-재검증.js 테스트 새로운 요청 시 currentToken이 \"newToken\" 상태라면, 그대로 fetch를 해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"새로운 요청 시 currentToken이 \"newToken\" 상태라면, 그대로 fetch를 해야 한다."},{"ancestorTitles":["(lv.4)api-request-재검증.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)api-request-재검증.js 테스트 currentToken이 \"valid\" 상태라면, 바로 fetch를 해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"currentToken이 \"valid\" 상태라면, 바로 fetch를 해야 한다."}],"endTime":1738890643230,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.4)api-request-재검증.test.js","startTime":1738890642928,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)날짜-포맷팅-하기.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-포맷팅-하기.js 테스트 Date 객체를 'YYYY년 MM월 DD일 HH시 mm분' 형태로 포맷해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Date 객체를 'YYYY년 MM월 DD일 HH시 mm분' 형태로 포맷해야 한다."},{"ancestorTitles":["(lv.3)날짜-포맷팅-하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-포맷팅-하기.js 테스트 한 자리 수 월, 일, 시, 분은 0을 붙여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"한 자리 수 월, 일, 시, 분은 0을 붙여야 한다."},{"ancestorTitles":["(lv.3)날짜-포맷팅-하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-포맷팅-하기.js 테스트 연도, 월, 일, 시, 분이 모두 두 자리 이상인 경우에도 정상 작동해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"연도, 월, 일, 시, 분이 모두 두 자리 이상인 경우에도 정상 작동해야 한다."},{"ancestorTitles":["(lv.3)날짜-포맷팅-하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-포맷팅-하기.js 테스트 월이 12월, 시가 23시(두 자리) 등 경계값도 테스트한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"월이 12월, 시가 23시(두 자리) 등 경계값도 테스트한다."}],"endTime":1738890643233,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)날짜-포맷팅-하기.test.js","startTime":1738890642884,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)장바구니-독립-문제.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)장바구니-독립-문제.js 테스트 userACart와 userBCart는 독립적으로 존재해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"userACart와 userBCart는 독립적으로 존재해야 한다."},{"ancestorTitles":["(lv.3)장바구니-독립-문제.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)장바구니-독립-문제.js 테스트 userBCart에 쿠폰이 적용되면 userACart는 영향을 받지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"userBCart에 쿠폰이 적용되면 userACart는 영향을 받지 않아야 한다."},{"ancestorTitles":["(lv.3)장바구니-독립-문제.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)장바구니-독립-문제.js 테스트 userACart는 원본 가격을 유지해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"userACart는 원본 가격을 유지해야 한다."},{"ancestorTitles":["(lv.3)장바구니-독립-문제.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)장바구니-독립-문제.js 테스트 userBCart 아이템 가격은 각각 5000원씩 할인되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"userBCart 아이템 가격은 각각 5000원씩 할인되어야 한다."}],"endTime":1738890643234,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\01.객체\\(lv.3)장바구니-독립-문제.test.js","startTime":1738890642999,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]객체-선언하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]객체-선언하기.js 테스트 person 객체의 name 프로퍼티는 \"Alice\"여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person 객체의 name 프로퍼티는 \"Alice\"여야 한다."},{"ancestorTitles":["(lv.1)[1]객체-선언하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]객체-선언하기.js 테스트 person 객체의 age 프로퍼티는 25여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person 객체의 age 프로퍼티는 25여야 한다."},{"ancestorTitles":["(lv.1)[1]객체-선언하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]객체-선언하기.js 테스트 person 객체는 name, age 프로퍼티를 모두 가져야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"person 객체는 name, age 프로퍼티를 모두 가져야 한다."}],"endTime":1738890643269,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.1)[1]객체-선언하기.test.js","startTime":1738890643068,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findUserByName 함수"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findUserByName 함수 배열에 해당 이름을 가진 사용자가 있으면 첫 번째 객체를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 해당 이름을 가진 사용자가 있으면 첫 번째 객체를 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findUserByName 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findUserByName 함수 배열에 해당 이름을 가진 사용자가 없으면 null을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 해당 이름을 가진 사용자가 없으면 null을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findUserByName 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findUserByName 함수 빈 배열을 전달하면 null을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 null을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findUserByName 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findUserByName 함수 find 메서드를 사용하여 구현해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"find 메서드를 사용하여 구현해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findIndexOf 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findIndexOf 함수 배열에 해당 값이 있으면 첫 번째 인덱스를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 해당 값이 있으면 첫 번째 인덱스를 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findIndexOf 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findIndexOf 함수 배열에 해당 값이 없으면 -1을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 해당 값이 없으면 -1을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findIndexOf 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findIndexOf 함수 빈 배열을 전달하면 -1을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 -1을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findIndexOf 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findIndexOf 함수 객체나 배열 같은 복합 데이터를 찾을 때 올바른 인덱스를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"객체나 배열 같은 복합 데이터를 찾을 때 올바른 인덱스를 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-find.js 테스트","findIndexOf 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-find.js 테스트 findIndexOf 함수 findIndex 메서드를 사용하여 구현해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"findIndex 메서드를 사용하여 구현해야 합니다."}],"endTime":1738890643272,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-find.test.js","startTime":1738890643039,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[3]함수의-사용-응용.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]함수의-사용-응용.js 테스트 total은 3000이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"total은 3000이어야 한다."},{"ancestorTitles":["(lv.2)[3]함수의-사용-응용.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]함수의-사용-응용.js 테스트 canDriveResult는 true여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"canDriveResult는 true여야 한다."},{"ancestorTitles":["(lv.2)[3]함수의-사용-응용.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]함수의-사용-응용.js 테스트 adultResult는 'minor'여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"adultResult는 'minor'여야 한다."}],"endTime":1738890643278,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[3]함수의-사용-응용.test.js","startTime":1738890643023,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]메서드-만들기.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]메서드-만들기.js 테스트 person.introduce()를 호출하면 '안녕하세요, 저는 철수이고 25살입니다.'를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person.introduce()를 호출하면 '안녕하세요, 저는 철수이고 25살입니다.'를 반환해야 합니다."}],"endTime":1738890643298,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.1)[2]메서드-만들기.test.js","startTime":1738890643080,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 num1GreaterThan은 false, num2GreaterThan은 true 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"num1GreaterThan은 false, num2GreaterThan은 true 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 num1LessThan은 false, num2LessThan은 false 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"num1LessThan은 false, num2LessThan은 false 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 num1GreaterThanOrEqual은 true, num2GreaterThanOrEqual은 true 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"num1GreaterThanOrEqual은 true, num2GreaterThanOrEqual은 true 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 num1LessThanOrEqual은 true, num2LessThanOrEqual은 false 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"num1LessThanOrEqual은 true, num2LessThanOrEqual은 false 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 bothGreaterThan은 false 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bothGreaterThan은 false 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 bothLessThan은 false 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bothLessThan은 false 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 eitherGreaterThan은 true 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"eitherGreaterThan은 true 이어야 한다."},{"ancestorTitles":["(lv.2)논리-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)논리-연산자.js 테스트 eitherLessThan은 false 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"eitherLessThan은 false 이어야 한다."}],"endTime":1738890643330,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.2)논리-연산자.test.js","startTime":1738890643138,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]블록-스코프.js 테스트"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]블록-스코프.js 테스트 blockScopeTest 함수는 w에 접근할 때 ReferenceError를 발생시켜야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"blockScopeTest 함수는 w에 접근할 때 ReferenceError를 발생시켜야 합니다."},{"ancestorTitles":["(lv.1)[2]블록-스코프.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]블록-스코프.js 테스트 blockScopeTest 함수는 u에 접근할 때 값 2를 출력해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"blockScopeTest 함수는 u에 접근할 때 값 2를 출력해야 합니다."}],"endTime":1738890643360,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[2]블록-스코프.test.js","startTime":1738890643099,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 빈 배열을 전달하면 averageAge와 maxAge가 0이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 averageAge와 maxAge가 0이어야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 배열에 나이가 하나만 들어 있으면 그 값이 averageAge와 maxAge가 되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"배열에 나이가 하나만 들어 있으면 그 값이 averageAge와 maxAge가 되어야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 나이가 여러 개일 때, 평균과 최대를 올바르게 계산해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"나이가 여러 개일 때, 평균과 최대를 올바르게 계산해야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 나이가 음수인 경우도 합산과 최대값이 정확히 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"나이가 음수인 경우도 합산과 최대값이 정확히 계산되어야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 모두 음수일 때도 평균과 최대를 올바르게 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"모두 음수일 때도 평균과 최대를 올바르게 반환해야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 값 중 하나가 Number.NEGATIVE_INFINITY일 때도 올바르게 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"값 중 하나가 Number.NEGATIVE_INFINITY일 때도 올바르게 반환해야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 모든 나이가 같으면 averageAge와 maxAge는 동일해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"모든 나이가 같으면 averageAge와 maxAge는 동일해야 한다."},{"ancestorTitles":["(lv.3)나이-통계-구하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)나이-통계-구하기.js 테스트 reduce 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reduce 메서드를 사용해야 한다."}],"endTime":1738890643374,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)나이-통계-구하기.test.js","startTime":1738890643196,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[2]삼항-연산-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]삼항-연산-함수.js 테스트 나이 19는 minor여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 19는 minor여야 한다."},{"ancestorTitles":["(lv.2)[2]삼항-연산-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]삼항-연산-함수.js 테스트 나이 20은 adult여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 20은 adult여야 한다."},{"ancestorTitles":["(lv.2)[2]삼항-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]삼항-연산-함수.js 테스트 나이 30은 adult여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 30은 adult여야 한다."},{"ancestorTitles":["(lv.2)[2]삼항-연산-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]삼항-연산-함수.js 테스트 나이 10은 minor여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 10은 minor여야 한다."}],"endTime":1738890643430,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[2]삼항-연산-함수.test.js","startTime":1738890643243,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]배열-선언하기.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]배열-선언하기.js 테스트 array 변수는 [1, 2, 3] 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"array 변수는 [1, 2, 3] 이어야 한다."},{"ancestorTitles":["(lv.1)[1]배열-선언하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]배열-선언하기.js 테스트 array의 길이는 3이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"array의 길이는 3이어야 한다."}],"endTime":1738890643458,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.1)[1]배열-선언하기.test.js","startTime":1738890643283,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)설정값-보존하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)설정값-보존하기.js 테스트 setConfig로 설정한 값은 getConfig로 가져올 수 있어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"setConfig로 설정한 값은 getConfig로 가져올 수 있어야 한다."},{"ancestorTitles":["(lv.3)설정값-보존하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)설정값-보존하기.js 테스트 getConfig로 없는 키를 조회하면 undefined가 반환되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"getConfig로 없는 키를 조회하면 undefined가 반환되어야 한다."},{"ancestorTitles":["(lv.3)설정값-보존하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)설정값-보존하기.js 테스트 config 객체를 직접 접근할 수 없고, setConfig와 getConfig 메서드로만 접근해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"config 객체를 직접 접근할 수 없고, setConfig와 getConfig 메서드로만 접근해야 한다."},{"ancestorTitles":["(lv.3)설정값-보존하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)설정값-보존하기.js 테스트 여러 설정값을 각각 setConfig로 저장 후, getConfig로 올바르게 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"여러 설정값을 각각 setConfig로 저장 후, getConfig로 올바르게 반환해야 한다."},{"ancestorTitles":["(lv.3)설정값-보존하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)설정값-보존하기.js 테스트 같은 키를 다시 setConfig하면 덮어쓰여야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"같은 키를 다시 setConfig하면 덮어쓰여야 한다."}],"endTime":1738890643463,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\04.클로저\\(lv.3)설정값-보존하기.test.js","startTime":1738890643251,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)sum-up-to.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)sum-up-to.js 테스트 n이 0 이하이면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"n이 0 이하이면 0을 반환해야 한다."},{"ancestorTitles":["(lv.1)sum-up-to.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)sum-up-to.js 테스트 n이 1이면 1을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 1이면 1을 반환해야 한다."},{"ancestorTitles":["(lv.1)sum-up-to.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)sum-up-to.js 테스트 n이 2이면 3(1+2)을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 2이면 3(1+2)을 반환해야 한다."},{"ancestorTitles":["(lv.1)sum-up-to.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)sum-up-to.js 테스트 n이 5이면 15(1+2+3+4+5)을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 5이면 15(1+2+3+4+5)을 반환해야 한다."}],"endTime":1738890643476,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\07.반복문\\(lv.1)sum-up-to.test.js","startTime":1738890643314,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)Promise-all.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-all.js 테스트 두 개의 성공 Promise를 병렬로 처리하여 결과 배열을 반환한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"두 개의 성공 Promise를 병렬로 처리하여 결과 배열을 반환한다."},{"ancestorTitles":["(lv.2)Promise-all.js 테스트"],"duration":164,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-all.js 테스트 동시에 실행되는 Promise들의 결과를 정상적으로 배열로 반환한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"동시에 실행되는 Promise들의 결과를 정상적으로 배열로 반환한다."},{"ancestorTitles":["(lv.2)Promise-all.js 테스트"],"duration":77,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-all.js 테스트 Promise.all을 사용하여 처리되므로 순서가 보장되는 것은 아니다(하지만 결과는 index에 맞춰 반환).","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise.all을 사용하여 처리되므로 순서가 보장되는 것은 아니다(하지만 결과는 index에 맞춰 반환)."},{"ancestorTitles":["(lv.2)Promise-all.js 테스트"],"duration":120,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-all.js 테스트 두 Promise가 병렬로 실행되는지 확인한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"두 Promise가 병렬로 실행되는지 확인한다."},{"ancestorTitles":["(lv.2)Promise-all.js 테스트"],"duration":247,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-all.js 테스트 두 Promise가 병렬로 실행될 때, 전체 소요 시간이 두 Promise의 지연 시간보다 짧지 않다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"두 Promise가 병렬로 실행될 때, 전체 소요 시간이 두 Promise의 지연 시간보다 짧지 않다."}],"endTime":1738890643479,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.2)Promise-all.test.js","startTime":1738890642715,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)Map과 Set 활용하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Map과 Set 활용하기.js 테스트 새로 생성하면 userLogs는 비어 있어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"새로 생성하면 userLogs는 비어 있어야 한다."},{"ancestorTitles":["(lv.3)Map과 Set 활용하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Map과 Set 활용하기.js 테스트 recordUserAction을 호출하면 해당 userId에 액션이 저장되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"recordUserAction을 호출하면 해당 userId에 액션이 저장되어야 한다."},{"ancestorTitles":["(lv.3)Map과 Set 활용하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Map과 Set 활용하기.js 테스트 동일 userId로 여러 액션을 기록하면 모두 저장되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"동일 userId로 여러 액션을 기록하면 모두 저장되어야 한다."},{"ancestorTitles":["(lv.3)Map과 Set 활용하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Map과 Set 활용하기.js 테스트 같은 액션을 중복으로 추가해도 Set을 사용하므로 중복없이 저장되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"같은 액션을 중복으로 추가해도 Set을 사용하므로 중복없이 저장되어야 한다."},{"ancestorTitles":["(lv.3)Map과 Set 활용하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)Map과 Set 활용하기.js 테스트 존재하지 않는 userId를 getUserActions하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"존재하지 않는 userId를 getUserActions하면 빈 배열을 반환해야 한다."}],"endTime":1738890643505,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\01.객체\\(lv.3)Map-Set-활용하기.test.js","startTime":1738890643291,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["01.변수-이름규칙.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"01.변수-이름규칙.js 테스트 잘못된 변수 이름은 모듈에서 찾을 수 없어야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"잘못된 변수 이름은 모듈에서 찾을 수 없어야 합니다."},{"ancestorTitles":["01.변수-이름규칙.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"01.변수-이름규칙.js 테스트 유효한 변수 이름은 모듈에서 존재해야 합니다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"유효한 변수 이름은 모듈에서 존재해야 합니다."}],"endTime":1738890643525,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[1]변수-이름규칙.test.js","startTime":1738890643344,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)빈도수-세기.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)빈도수-세기.js 테스트 배열이 비어있으면 빈 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열이 비어있으면 빈 객체를 반환해야 한다."},{"ancestorTitles":["(lv.2)빈도수-세기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)빈도수-세기.js 테스트 문자열 요소의 빈도를 정확히 계산해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"문자열 요소의 빈도를 정확히 계산해야 한다."},{"ancestorTitles":["(lv.2)빈도수-세기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)빈도수-세기.js 테스트 숫자 요소의 빈도도 올바르게 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"숫자 요소의 빈도도 올바르게 계산되어야 한다."},{"ancestorTitles":["(lv.2)빈도수-세기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)빈도수-세기.js 테스트 다양한 자료형이 섞인 경우에도 빈도가 올바르게 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"다양한 자료형이 섞인 경우에도 빈도가 올바르게 계산되어야 한다."}],"endTime":1738890643548,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.2)빈도수-세기.test.js","startTime":1738890643395,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[2]manageTaskList.js 테스트"],"duration":55,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]manageTaskList.js 테스트 pop, push 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"pop, push 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)[2]manageTaskList.js 테스트"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]manageTaskList.js 테스트 마지막 항목이 제거되고, 새 항목이 추가되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"마지막 항목이 제거되고, 새 항목이 추가되어야 한다."},{"ancestorTitles":["(lv.2)[2]manageTaskList.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]manageTaskList.js 테스트 첫 항목이 'Updated Task'로 변경되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"첫 항목이 'Updated Task'로 변경되어야 한다."},{"ancestorTitles":["(lv.2)[2]manageTaskList.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]manageTaskList.js 테스트 배열이 비어지지 않았다면, 첫 항목은 'Updated Task'가 되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열이 비어지지 않았다면, 첫 항목은 'Updated Task'가 되어야 한다."},{"ancestorTitles":["(lv.2)[2]manageTaskList.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]manageTaskList.js 테스트 pop 후 모든 항목이 제거되어도 push로 새 항목을 추가하므로 배열은 비어 있지 않다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pop 후 모든 항목이 제거되어도 push로 새 항목을 추가하므로 배열은 비어 있지 않다."}],"endTime":1738890643583,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-pop-and-push.test.js","startTime":1738890643250,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)로그인-확인하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인하기.js 테스트 id가 'admin'이고 pw가 '1234'이면 'success'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"id가 'admin'이고 pw가 '1234'이면 'success'를 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인하기.js 테스트 id가 'admin'이 아니거나 pw가 '1234'가 아니면 'fail'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"id가 'admin'이 아니거나 pw가 '1234'가 아니면 'fail'을 반환해야 한다."}],"endTime":1738890643584,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\04.조건문\\(lv.2)로그인-확인하기.test.js","startTime":1738890643286,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[3]배열-메서드-reverse.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]배열-메서드-reverse.js 테스트 reverse 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverse 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)[3]배열-메서드-reverse.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]배열-메서드-reverse.js 테스트 원본 배열을 변경하지 않고, 뒤집힌 새로운 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"원본 배열을 변경하지 않고, 뒤집힌 새로운 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)[3]배열-메서드-reverse.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]배열-메서드-reverse.js 테스트 빈 배열을 입력하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)[3]배열-메서드-reverse.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[3]배열-메서드-reverse.js 테스트 문자열이 섞여 있어도 올바르게 뒤집어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"문자열이 섞여 있어도 올바르게 뒤집어야 한다."}],"endTime":1738890643754,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-reverse.test.js","startTime":1738890643537,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[1]함수의-사용.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]함수의-사용.js 테스트 result1은 (num1 + num2)인 15여야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"result1은 (num1 + num2)인 15여야 합니다."},{"ancestorTitles":["(lv.2)[1]함수의-사용.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]함수의-사용.js 테스트 result2는 (num1 - num2)인 5여야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"result2는 (num1 - num2)인 5여야 합니다."},{"ancestorTitles":["(lv.2)[1]함수의-사용.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]함수의-사용.js 테스트 result3은 (num1 * num2)인 50이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"result3은 (num1 * num2)인 50이어야 합니다."},{"ancestorTitles":["(lv.2)[1]함수의-사용.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[1]함수의-사용.js 테스트 result4는 (num1 / num2)인 2여야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"result4는 (num1 / num2)인 2여야 합니다."}],"endTime":1738890643789,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[1]함수의-사용.test.js","startTime":1738890643561,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)재고-관리하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)재고-관리하기.js 테스트 기존 id가 없으면 새 항목을 추가해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"기존 id가 없으면 새 항목을 추가해야 한다."},{"ancestorTitles":["(lv.2)재고-관리하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)재고-관리하기.js 테스트 이미 존재하는 id가 있으면 stock만 증가해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"이미 존재하는 id가 있으면 stock만 증가해야 한다."},{"ancestorTitles":["(lv.2)재고-관리하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)재고-관리하기.js 테스트 다른 id에는 영향을 주지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"다른 id에는 영향을 주지 않아야 한다."},{"ancestorTitles":["(lv.2)재고-관리하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)재고-관리하기.js 테스트 stock이 0 이상인지 등 기본 속성 검사","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"stock이 0 이상인지 등 기본 속성 검사"}],"endTime":1738890643818,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.2)재고-관리하기.test.js","startTime":1738890643519,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)chunk.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)chunk.js 테스트 주어진 크기로 배열을 나누어 2차원 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"주어진 크기로 배열을 나누어 2차원 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)chunk.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)chunk.js 테스트 배열 길이가 덩어리 크기의 배수일 경우 모든 덩어리가 동일한 크기를 가져야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열 길이가 덩어리 크기의 배수일 경우 모든 덩어리가 동일한 크기를 가져야 한다."},{"ancestorTitles":["(lv.3)chunk.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)chunk.js 테스트 덩어리 크기가 1이면 각 원소가 개별 배열로 나뉘어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"덩어리 크기가 1이면 각 원소가 개별 배열로 나뉘어야 한다."},{"ancestorTitles":["(lv.3)chunk.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)chunk.js 테스트 빈 배열을 전달하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)chunk.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)chunk.js 테스트 덩어리 크기가 배열 길이보다 크면 전체 배열을 하나의 덩어리로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"덩어리 크기가 배열 길이보다 크면 전체 배열을 하나의 덩어리로 반환해야 한다."}],"endTime":1738890643822,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)chunk.test.js","startTime":1738890643475,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]화살표-함수.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]화살표-함수.js 테스트 multiplyByTwo(2)는 4를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiplyByTwo(2)는 4를 반환해야 합니다."},{"ancestorTitles":["(lv.1)[1]화살표-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]화살표-함수.js 테스트 multiplyByTwo(10)는 20을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiplyByTwo(10)는 20을 반환해야 합니다."}],"endTime":1738890643831,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.1)[1]화살표-함수.test.js","startTime":1738890643447,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]더하기-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]더하기-연산자.js 테스트 increment 변수는 1이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"increment 변수는 1이어야 합니다."},{"ancestorTitles":["(lv.1)[2]더하기-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]더하기-연산자.js 테스트 decrement 변수는 -1이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"decrement 변수는 -1이어야 합니다."},{"ancestorTitles":["(lv.1)[2]더하기-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]더하기-연산자.js 테스트 increment 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"increment 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]더하기-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]더하기-연산자.js 테스트 decrement 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"decrement 변수는 number 타입이어야 합니다."}],"endTime":1738890643841,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)더하기-연산자.test.js","startTime":1738890643598,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)참조형-타입-비교하기.js 테스트"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)참조형-타입-비교하기.js 테스트 person2는 person의 name과 age를 가져야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"person2는 person의 name과 age를 가져야 한다."},{"ancestorTitles":["(lv.2)참조형-타입-비교하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)참조형-타입-비교하기.js 테스트 person과 person2의 비교 결과와 expected 값이 일치해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"person과 person2의 비교 결과와 expected 값이 일치해야 한다."},{"ancestorTitles":["(lv.2)참조형-타입-비교하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)참조형-타입-비교하기.js 테스트 person3는 person과 동일한 참조여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person3는 person과 동일한 참조여야 한다."},{"ancestorTitles":["(lv.2)참조형-타입-비교하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)참조형-타입-비교하기.js 테스트 person과 person3의 비교 결과와 expected2 값이 일치해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"person과 person3의 비교 결과와 expected2 값이 일치해야 한다."}],"endTime":1738890643854,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.2)참조형-타입-비교하기.test.js","startTime":1738890643491,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-slice.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-slice.js 테스트 slice 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"slice 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-slice.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-slice.js 테스트 end가 주어지면 start부터 end 바로 전 요소까지를 잘라서 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"end가 주어지면 start부터 end 바로 전 요소까지를 잘라서 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-slice.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-slice.js 테스트 end가 주어지지 않으면 start부터 끝까지 잘라야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"end가 주어지지 않으면 start부터 끝까지 잘라야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-slice.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-slice.js 테스트 start와 end가 모두 0이면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"start와 end가 모두 0이면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-slice.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-slice.js 테스트 start가 배열 길이보다 크거나 같으면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"start가 배열 길이보다 크거나 같으면 빈 배열을 반환해야 한다."}],"endTime":1738890643861,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-slice.test.js","startTime":1738890643480,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)날짜-사이-일수-계산하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-사이-일수-계산하기.js 테스트 같은 날짜면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"같은 날짜면 0을 반환해야 한다."},{"ancestorTitles":["(lv.3)날짜-사이-일수-계산하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-사이-일수-계산하기.js 테스트 날짜 차이가 정확히 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"날짜 차이가 정확히 계산되어야 한다."},{"ancestorTitles":["(lv.3)날짜-사이-일수-계산하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-사이-일수-계산하기.js 테스트 순서가 바뀌어도 절댓값으로 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"순서가 바뀌어도 절댓값으로 계산되어야 한다."},{"ancestorTitles":["(lv.3)날짜-사이-일수-계산하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)날짜-사이-일수-계산하기.js 테스트 연도가 다른 경우도 올바르게 계산되어야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"연도가 다른 경우도 올바르게 계산되어야 한다."}],"endTime":1738890643865,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\05.응용\\(lv.3)날짜-사이-일수-계산하기.test.js","startTime":1738890643393,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare1 변수는 true이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare1 변수는 true이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare2 변수는 false이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare2 변수는 false이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare3 변수는 false이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare3 변수는 false이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare4 변수는 true이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare4 변수는 true이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare1 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare1 변수는 boolean 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare2 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare2 변수는 boolean 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare3 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare3 변수는 boolean 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]비교-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비교-연산자.js 테스트 compare4 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"compare4 변수는 boolean 타입이어야 합니다."}],"endTime":1738890643870,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)비교-연산자.test.js","startTime":1738890643498,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)행렬-뒤집기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)행렬-뒤집기.js 테스트 3x3 배열을 90도 회전해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"3x3 배열을 90도 회전해야 한다."},{"ancestorTitles":["(lv.4)행렬-뒤집기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)행렬-뒤집기.js 테스트 원본 배열이 변경되지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"원본 배열이 변경되지 않아야 한다."},{"ancestorTitles":["(lv.4)행렬-뒤집기.js 테스트"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)행렬-뒤집기.js 테스트 1x1 배열은 그대로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"1x1 배열은 그대로 반환해야 한다."},{"ancestorTitles":["(lv.4)행렬-뒤집기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)행렬-뒤집기.js 테스트 비어있는 배열이 주어지면 비어있는 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"비어있는 배열이 주어지면 비어있는 배열을 반환해야 한다."},{"ancestorTitles":["(lv.4)행렬-뒤집기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)행렬-뒤집기.js 테스트 4x4 배열도 올바르게 회전해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"4x4 배열도 올바르게 회전해야 한다."}],"endTime":1738890643873,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.4)행렬-뒤집기.test.js","startTime":1738890643597,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 주어진 키에 따라 객체들을 올바르게 그룹화해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"주어진 키에 따라 객체들을 올바르게 그룹화해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 빈 배열을 전달하면 빈 객체을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 빈 객체을 반환해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 지정한 키가 객체에 존재하지 않으면 undefined 키로 그룹화해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"지정한 키가 객체에 존재하지 않으면 undefined 키로 그룹화해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 모든 객체가 동일한 키 값을 가질 경우 하나의 그룹만 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모든 객체가 동일한 키 값을 가질 경우 하나의 그룹만 반환해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 키의 값이 다양한 타입일 때 올바르게 그룹화해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"키의 값이 다양한 타입일 때 올바르게 그룹화해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 키의 값이 숫자일 때 올바르게 그룹화해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"키의 값이 숫자일 때 올바르게 그룹화해야 합니다."},{"ancestorTitles":["(lv.4)group-by.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.4)group-by.js 테스트 reduce 메서드를 사용해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reduce 메서드를 사용해야 합니다."}],"endTime":1738890643995,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.4)group-by.test.js","startTime":1738890643769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[2]비교-연산-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]비교-연산-함수.js 테스트 looseCompare(1, '1')는 true여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"looseCompare(1, '1')는 true여야 한다."},{"ancestorTitles":["(lv.2)[2]비교-연산-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]비교-연산-함수.js 테스트 looseCompare(1, 2)는 false여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"looseCompare(1, 2)는 false여야 한다."},{"ancestorTitles":["(lv.2)[2]비교-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]비교-연산-함수.js 테스트 strictCompare(1, '1')는 false여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"strictCompare(1, '1')는 false여야 한다."},{"ancestorTitles":["(lv.2)[2]비교-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]비교-연산-함수.js 테스트 strictCompare(2, 2)는 true여야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"strictCompare(2, 2)는 true여야 한다."}],"endTime":1738890643996,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[2]비교-연산-함수.test.js","startTime":1738890643806,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 increment 변수는 1이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"increment 변수는 1이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 decrement 변수는 -1이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"decrement 변수는 -1이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 add 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"add 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 subtract 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 multiply 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 divide 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 add 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"add 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 subtract 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 multiply 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 divide 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 increment 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"increment 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]단축-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]단축-연산자.js 테스트 decrement 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"decrement 변수는 number 타입이어야 합니다."}],"endTime":1738890644033,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)단축-연산자.test.js","startTime":1738890643834,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)객체-우선순위-병합.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)객체-우선순위-병합.js 테스트 빈 객체만 주어지면 빈 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 객체만 주어지면 빈 객체를 반환해야 한다."},{"ancestorTitles":["(lv.3)객체-우선순위-병합.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)객체-우선순위-병합.js 테스트 객체 하나만 주어지면 동일한 객체 내용을 가진 새 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"객체 하나만 주어지면 동일한 객체 내용을 가진 새 객체를 반환해야 한다."},{"ancestorTitles":["(lv.3)객체-우선순위-병합.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)객체-우선순위-병합.js 테스트 두 개 이상의 객체에서 중복된 키가 있으면, 뒤쪽 객체의 값이 우선한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"두 개 이상의 객체에서 중복된 키가 있으면, 뒤쪽 객체의 값이 우선한다."},{"ancestorTitles":["(lv.3)객체-우선순위-병합.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)객체-우선순위-병합.js 테스트 원본 객체들은 변경되지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"원본 객체들은 변경되지 않아야 한다."},{"ancestorTitles":["(lv.3)객체-우선순위-병합.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)객체-우선순위-병합.js 테스트 얕은 복사만 수행하므로, 중첩된 객체는 참조가 그대로 복사된다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"얕은 복사만 수행하므로, 중첩된 객체는 참조가 그대로 복사된다."}],"endTime":1738890644046,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\01.객체\\(lv.3)객체-합치기.test.js","startTime":1738890643836,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)검색어-캐싱하기.js 테스트"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)검색어-캐싱하기.js 테스트 많이 검색된 순으로 상위 10개 키워드를 캐싱해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"많이 검색된 순으로 상위 10개 키워드를 캐싱해야 한다."},{"ancestorTitles":["(lv.3)검색어-캐싱하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)검색어-캐싱하기.js 테스트 중복된 키워드는 한 번만 저장되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"중복된 키워드는 한 번만 저장되어야 한다."},{"ancestorTitles":["(lv.3)검색어-캐싱하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)검색어-캐싱하기.js 테스트 키워드가 10개를 넘으면, 상위 10개만 캐싱해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"키워드가 10개를 넘으면, 상위 10개만 캐싱해야 한다."},{"ancestorTitles":["(lv.3)검색어-캐싱하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)검색어-캐싱하기.js 테스트 새로운 updateTopKeywords 호출 시 기존 캐시는 지우고 새로 저장해야 한다.","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"새로운 updateTopKeywords 호출 시 기존 캐시는 지우고 새로 저장해야 한다."}],"endTime":1738890644056,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)검색어-캐싱하기.test.js","startTime":1738890643846,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)[2]rotate-array.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]rotate-array.js 테스트 [1, 2, 3]을 전달하면 [3, 1, 2]를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[1, 2, 3]을 전달하면 [3, 1, 2]를 반환해야 한다."},{"ancestorTitles":["(lv.3)[2]rotate-array.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]rotate-array.js 테스트 [10, 20, 30, 40]을 전달하면 [40, 10, 20, 30]을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[10, 20, 30, 40]을 전달하면 [40, 10, 20, 30]을 반환해야 한다."},{"ancestorTitles":["(lv.3)[2]rotate-array.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]rotate-array.js 테스트 빈 배열을 전달하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 전달하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)[2]rotate-array.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]rotate-array.js 테스트 단일 요소 배열은 그대로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"단일 요소 배열은 그대로 반환해야 한다."}],"endTime":1738890644082,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)rotate-array.test.js","startTime":1738890643879,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-중복-제거.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-중복-제거.js 테스트 숫자 배열에서 중복이 제거되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"숫자 배열에서 중복이 제거되어야 한다."},{"ancestorTitles":["(lv.2)배열-중복-제거.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-중복-제거.js 테스트 문자열이 섞인 배열에서도 중복이 제거되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"문자열이 섞인 배열에서도 중복이 제거되어야 한다."},{"ancestorTitles":["(lv.2)배열-중복-제거.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-중복-제거.js 테스트 빈 배열을 입력하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-중복-제거.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-중복-제거.js 테스트 하나의 요소만 있는 배열은 그대로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"하나의 요소만 있는 배열은 그대로 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-중복-제거.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-중복-제거.js 테스트 모든 요소가 같은 경우, 길이가 1인 배열이 되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모든 요소가 같은 경우, 길이가 1인 배열이 되어야 한다."}],"endTime":1738890644090,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-중복-제거.test.js","startTime":1738890643882,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)pass-or-fail.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)pass-or-fail.js 테스트 점수가 60 이상이면 'Pass'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"점수가 60 이상이면 'Pass'를 반환해야 한다."},{"ancestorTitles":["(lv.1)pass-or-fail.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)pass-or-fail.js 테스트 점수가 60 미만이면 'Fail'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"점수가 60 미만이면 'Fail'을 반환해야 한다."}],"endTime":1738890644096,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\04.조건문\\(lv.1)pass-or-fail.test.js","startTime":1738890643883,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[2]논리-연산-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]논리-연산-함수.js 테스트 age가 18 이상이고 hasLicense가 true이면 true를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"age가 18 이상이고 hasLicense가 true이면 true를 반환해야 한다."},{"ancestorTitles":["(lv.2)[2]논리-연산-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]논리-연산-함수.js 테스트 age가 18 미만이거나 hasLicense가 false이면 false를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"age가 18 미만이거나 hasLicense가 false이면 false를 반환해야 한다."}],"endTime":1738890644100,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[2]논리-연산-함수.test.js","startTime":1738890643885,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]객체-복사하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]객체-복사하기.js 테스트 newObj는 obj와 같은 참조를 가지지 않아야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"newObj는 obj와 같은 참조를 가지지 않아야 합니다."},{"ancestorTitles":["(lv.1)[2]객체-복사하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]객체-복사하기.js 테스트 newObj는 obj의 age보다 1 더 많아야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"newObj는 obj의 age보다 1 더 많아야 합니다."},{"ancestorTitles":["(lv.1)[2]객체-복사하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]객체-복사하기.js 테스트 newObj의 나이를 제외한 다른 속성은 obj와 동일해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"newObj의 나이를 제외한 다른 속성은 obj와 동일해야 합니다."}],"endTime":1738890644128,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.1)[2]객체-복사하기.test.js","startTime":1738890643876,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)객체와-loop.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체와-loop.js 테스트 빈 객체 {}를 입력하면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 객체 {}를 입력하면 0을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체와-loop.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체와-loop.js 테스트 name 키만 있는 객체 { name: 'Alice' }를 입력하면 1을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"name 키만 있는 객체 { name: 'Alice' }를 입력하면 1을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체와-loop.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체와-loop.js 테스트 a, b, c 세 개의 키를 가진 객체를 입력하면 3을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"a, b, c 세 개의 키를 가진 객체를 입력하면 3을 반환해야 한다."}],"endTime":1738890644132,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.2)객체와-loop.test.js","startTime":1738890643896,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]const-재할당.js 테스트"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]const-재할당.js 테스트 reassignConst 함수를 실행하면 에러가 발생해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reassignConst 함수를 실행하면 에러가 발생해야 합니다."}],"endTime":1738890644187,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[1]const-재할당.test.js","startTime":1738890644009,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 num 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"num 변수는 number 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 str 변수는 string 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"str 변수는 string 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 bool 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"bool 변수는 boolean 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 arr 변수는 배열 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arr 변수는 배열 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 obj 변수는 object 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"obj 변수는 object 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 undef 변수는 undefined 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"undef 변수는 undefined 타입이어야 합니다."},{"ancestorTitles":["여러-타입-변수-선언.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"여러-타입-변수-선언.js 테스트 nul 변수는 null이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"nul 변수는 null이어야 합니다."}],"endTime":1738890644216,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[1]여러-타입-변수-선언.test.js","startTime":1738890644011,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]기본값이-있는-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본값이-있는-함수.js 테스트 나이 파라미터가 없으면 '안녕하세요! 저는 홍길동, 나이는 비공개입니다.' 를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 파라미터가 없으면 '안녕하세요! 저는 홍길동, 나이는 비공개입니다.' 를 반환해야 합니다."},{"ancestorTitles":["(lv.1)[2]기본값이-있는-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본값이-있는-함수.js 테스트 나이 파라미터가 있으면 해당 나이를 포함한 문구를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"나이 파라미터가 있으면 해당 나이를 포함한 문구를 반환해야 합니다."}],"endTime":1738890644228,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.1)[2]기본값이-있는-함수.test.js","startTime":1738890644060,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 주어진 예시에 맞게 변환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"주어진 예시에 맞게 변환해야 한다."},{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 빈 배열을 입력하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 짝수가 하나도 없으면 결과가 빈 배열이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"짝수가 하나도 없으면 결과가 빈 배열이어야 한다."},{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 threshold가 매우 작으면, 모든 숫자가 제외될 수 있다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"threshold가 매우 작으면, 모든 숫자가 제외될 수 있다."},{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 내림차순 정렬이 올바르게 이루어져야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"내림차순 정렬이 올바르게 이루어져야 한다."},{"ancestorTitles":["(lv.3)데이터-변환-파이프라인.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)데이터-변환-파이프라인.js 테스트 원본 배열은 변경되지 않아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"원본 배열은 변경되지 않아야 한다."}],"endTime":1738890644233,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)데이터-변환-파이프라인.test.js","startTime":1738890644057,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)Promise-체이닝-then.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)Promise-체이닝-then.js 테스트 getValueThenDouble 함수는 Promise 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"getValueThenDouble 함수는 Promise 객체를 반환해야 한다."},{"ancestorTitles":["(lv.1)Promise-체이닝-then.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)Promise-체이닝-then.js 테스트 resolve된 값이 2배가 되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"resolve된 값이 2배가 되어야 한다."}],"endTime":1738890644234,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.1)Promise-체이닝-then.test.js","startTime":1738890644070,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)deepClone.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)deepClone.js 테스트 객체의 중첩 프로퍼티를 깊은 복사해야 한다.","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"객체의 중첩 프로퍼티를 깊은 복사해야 한다."},{"ancestorTitles":["(lv.3)deepClone.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)deepClone.js 테스트 배열 안에 객체가 있어도 올바르게 복사해야 한다.","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"배열 안에 객체가 있어도 올바르게 복사해야 한다."}],"endTime":1738890644247,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\01.객체\\(lv.3)deepClone.test.js","startTime":1738890644096,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-filter.js 테스트","filterEven 함수 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-filter.js 테스트 filterEven 함수 테스트 짝수만 포함된 새 배열을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"짝수만 포함된 새 배열을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-filter.js 테스트","filterEven 함수 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-filter.js 테스트 filterEven 함수 테스트 빈 배열을 입력하면 빈 배열을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-filter.js 테스트","filterOdd 함수 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-filter.js 테스트 filterOdd 함수 테스트 홀수만 포함된 새 배열을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"홀수만 포함된 새 배열을 반환해야 합니다."},{"ancestorTitles":["(lv.2)배열-메서드-filter.js 테스트","filterOdd 함수 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-filter.js 테스트 filterOdd 함수 테스트 빈 배열을 입력하면 빈 배열을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 합니다."}],"endTime":1738890644246,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-filter.test.js","startTime":1738890644109,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]전-후위-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]전-후위-연산자.js 테스트 postIncrement 변수는 0이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"postIncrement 변수는 0이어야 합니다."},{"ancestorTitles":["(lv.1)[2]전-후위-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]전-후위-연산자.js 테스트 preIncrement 변수는 2이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"preIncrement 변수는 2이어야 합니다."},{"ancestorTitles":["(lv.1)[2]전-후위-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]전-후위-연산자.js 테스트 postIncrement 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"postIncrement 변수는 number 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]전-후위-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]전-후위-연산자.js 테스트 preIncrement 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"preIncrement 변수는 number 타입이어야 합니다."}],"endTime":1738890644253,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)전-후위-연산자.test.js","startTime":1738890644104,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]호이스팅.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]호이스팅.js 테스트 hoistingTest 함수 실행 시, 콘솔에 undefined와 5가 순서대로 출력되어야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"hoistingTest 함수 실행 시, 콘솔에 undefined와 5가 순서대로 출력되어야 합니다."}],"endTime":1738890644671,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[2]호이스팅.test.js","startTime":1738890644532,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]객체-속성-접근하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]객체-속성-접근하기.js 테스트 person2.name은 person.name과 같아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person2.name은 person.name과 같아야 한다."},{"ancestorTitles":["(lv.1)[1]객체-속성-접근하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]객체-속성-접근하기.js 테스트 person2.age는 person.age + 1 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"person2.age는 person.age + 1 이어야 한다."}],"endTime":1738890644684,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.1)[1]객체-속성-접근하기.test.js","startTime":1738890644522,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)문자열-뒤집기.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)문자열-뒤집기.js 테스트 문자열을 뒤집어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"문자열을 뒤집어야 한다."},{"ancestorTitles":["(lv.2)문자열-뒤집기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)문자열-뒤집기.js 테스트 문자열이 아닌 경우, 빈 문자열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"문자열이 아닌 경우, 빈 문자열을 반환해야 한다."},{"ancestorTitles":["(lv.2)문자열-뒤집기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)문자열-뒤집기.js 테스트 빈 문자열을 입력하면 빈 문자열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 문자열을 입력하면 빈 문자열을 반환해야 한다."},{"ancestorTitles":["(lv.2)문자열-뒤집기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)문자열-뒤집기.js 테스트 특수 문자가 포함된 문자열도 올바르게 뒤집어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"특수 문자가 포함된 문자열도 올바르게 뒤집어야 한다."},{"ancestorTitles":["(lv.2)문자열-뒤집기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)문자열-뒤집기.js 테스트 한글 문자열도 뒤집어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"한글 문자열도 뒤집어야 한다."}],"endTime":1738890644715,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.2)문자열-뒤집기.test.js","startTime":1738890644540,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)콜백-체인.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)콜백-체인.js 테스트 두 콜백을 차례로 호출한 결과값을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"두 콜백을 차례로 호출한 결과값을 반환해야 한다."},{"ancestorTitles":["(lv.1)콜백-체인.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)콜백-체인.js 테스트 콜백이 다른 연산을 하더라도 올바른 체인 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"콜백이 다른 연산을 하더라도 올바른 체인 결과를 반환해야 한다."},{"ancestorTitles":["(lv.1)콜백-체인.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)콜백-체인.js 테스트 콜백이 문자열로 변환한 뒤, 길이를 반환하는 등 다양한 연산도 가능해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"콜백이 문자열로 변환한 뒤, 길이를 반환하는 등 다양한 연산도 가능해야 한다."}],"endTime":1738890644723,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\09.콜백함수\\(lv.1)콜백-함수-실행(2).test.js","startTime":1738890644530,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)[2]계산기-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]계산기-함수.js 테스트 calcTotal(1000)을 호출하면 1000을 반환해야 합니다. (quantity 기본값 1)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calcTotal(1000)을 호출하면 1000을 반환해야 합니다. (quantity 기본값 1)"},{"ancestorTitles":["(lv.2)[2]계산기-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]계산기-함수.js 테스트 calcTotal(1000, 2)를 호출하면 2000을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calcTotal(1000, 2)를 호출하면 2000을 반환해야 합니다."},{"ancestorTitles":["(lv.2)[2]계산기-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]계산기-함수.js 테스트 calcTotal(500, 3)를 호출하면 1500을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calcTotal(500, 3)를 호출하면 1500을 반환해야 합니다."},{"ancestorTitles":["(lv.2)[2]계산기-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)[2]계산기-함수.js 테스트 calcTotal(100)가 0 이하가 나오지 않도록 주의하세요. (기본값 1 확인)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calcTotal(100)가 0 이하가 나오지 않도록 주의하세요. (기본값 1 확인)"}],"endTime":1738890644725,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.2)[2]계산기-함수.test.js","startTime":1738890644535,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["delay 함수"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"delay 함수 지정된 시간(ms) 후에 \"done\"을 resolve해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"지정된 시간(ms) 후에 \"done\"을 resolve해야 합니다."},{"ancestorTitles":["delay 함수"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"delay 함수 비동기로 동작해야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"비동기로 동작해야 합니다."},{"ancestorTitles":["delay 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"delay 함수 0ms를 전달하면 즉시 \"done\"을 resolve해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"0ms를 전달하면 즉시 \"done\"을 resolve해야 합니다."},{"ancestorTitles":["delay 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"delay 함수 음수 시간도 결국 \"done\"을 resolve해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"음수 시간도 결국 \"done\"을 resolve해야 합니다."},{"ancestorTitles":["delay 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"delay 함수 여러 번 호출해도 각각 \"done\"을 resolve해야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"여러 번 호출해도 각각 \"done\"을 resolve해야 합니다."}],"endTime":1738890644726,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.2)delay.test.js","startTime":1738890644528,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]비동기-함수-사용하기.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비동기-함수-사용하기.js 테스트 fetchUsers로부터 받은 사용자 이름만 담긴 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"fetchUsers로부터 받은 사용자 이름만 담긴 배열을 반환해야 한다."},{"ancestorTitles":["(lv.1)[2]비동기-함수-사용하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비동기-함수-사용하기.js 테스트 빈 배열을 반환할 수도 있어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 반환할 수도 있어야 한다."},{"ancestorTitles":["(lv.1)[2]비동기-함수-사용하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]비동기-함수-사용하기.js 테스트 반환된 배열의 모든 요소는 문자열이어야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"반환된 배열의 모든 요소는 문자열이어야 한다."}],"endTime":1738890644736,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.2)비동기-함수-사용하기.test.js","startTime":1738890644528,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)[2]배열-메서드-체이닝.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]배열-메서드-체이닝.js 테스트 filter, sort, map 메서드를 모두 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"filter, sort, map 메서드를 모두 사용해야 한다."},{"ancestorTitles":["(lv.3)[2]배열-메서드-체이닝.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]배열-메서드-체이닝.js 테스트 20대만 골라서 나이 오름차순으로 정렬 후, email만 뽑아야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"20대만 골라서 나이 오름차순으로 정렬 후, email만 뽑아야 한다."},{"ancestorTitles":["(lv.3)[2]배열-메서드-체이닝.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]배열-메서드-체이닝.js 테스트 20대가 없으면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"20대가 없으면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)[2]배열-메서드-체이닝.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)[2]배열-메서드-체이닝.js 테스트 빈 배열이면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열이면 빈 배열을 반환해야 한다."}],"endTime":1738890644738,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.3)배열-메서드-체이닝.test.js","startTime":1738890644545,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]논리-Not-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]논리-Not-연산자.js 테스트 toggled 변수는 boolean 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"toggled 변수는 boolean 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]논리-Not-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]논리-Not-연산자.js 테스트 toggled 변수는 isActive 변수의 반대 값이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"toggled 변수는 isActive 변수의 반대 값이어야 합니다."}],"endTime":1738890644762,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)논리-Not-연산자.test.js","startTime":1738890644559,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)게시판-페이징.js 테스트"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)게시판-페이징.js 테스트 pageNumber가 1, perPage가 2면 첫 2개 게시글을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pageNumber가 1, perPage가 2면 첫 2개 게시글을 반환해야 한다."},{"ancestorTitles":["(lv.3)게시판-페이징.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)게시판-페이징.js 테스트 pageNumber가 2, perPage가 2면 다음 2개 게시글을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pageNumber가 2, perPage가 2면 다음 2개 게시글을 반환해야 한다."},{"ancestorTitles":["(lv.3)게시판-페이징.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)게시판-페이징.js 테스트 pageNumber가 3, perPage가 2면 남은 게시글 1개를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pageNumber가 3, perPage가 2면 남은 게시글 1개를 반환해야 한다."},{"ancestorTitles":["(lv.3)게시판-페이징.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)게시판-페이징.js 테스트 범위를 벗어나면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"범위를 벗어나면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.3)게시판-페이징.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)게시판-페이징.js 테스트 pageNumber나 perPage가 1 미만이면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"pageNumber나 perPage가 1 미만이면 빈 배열을 반환해야 한다."}],"endTime":1738890644781,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\02.배열\\(lv.3)페이지네이션.test.js","startTime":1738890644570,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]기본함수.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]기본함수.js 테스트 greet 함수는 \"Hello, World!\"를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"greet 함수는 \"Hello, World!\"를 반환해야 합니다."}],"endTime":1738890644790,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.1)[1]기본함수.test.js","startTime":1738890644620,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 id가 \"admin\"이고 pw가 \"1234\"이면 \"ok\"를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"id가 \"admin\"이고 pw가 \"1234\"이면 \"ok\"를 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 id가 \"admin\"이 아니면 \"fail\"을 반환(throw)해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"id가 \"admin\"이 아니면 \"fail\"을 반환(throw)해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 pw가 \"1234\"가 아니면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pw가 \"1234\"가 아니면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 아이디와 비밀번호 둘 다 틀린 경우에도 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"아이디와 비밀번호 둘 다 틀린 경우에도 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 아이디가 비어 있으면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"아이디가 비어 있으면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 비밀번호가 비어 있으면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"비밀번호가 비어 있으면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 아이디와 비밀번호 모두 빈 문자열이면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"아이디와 비밀번호 모두 빈 문자열이면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 아이디는 대소문자를 구분하므로, \"Admin\"이면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"아이디는 대소문자를 구분하므로, \"Admin\"이면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 비밀번호가 \"1234 \"처럼 공백이 포함되어 있으면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"비밀번호가 \"1234 \"처럼 공백이 포함되어 있으면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.2)로그인-확인-함수.js 테스트"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)로그인-확인-함수.js 테스트 특수 문자가 섞인 아이디나 비밀번호도 정확히 \"admin\"과 \"1234\"가 아닐 경우 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"특수 문자가 섞인 아이디나 비밀번호도 정확히 \"admin\"과 \"1234\"가 아닐 경우 \"fail\"을 반환해야 한다."}],"endTime":1738890644863,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.2)로그인-확인-함수.test.js","startTime":1738890644690,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)객체-메서드-Values.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Values.js 테스트 name과 age 값이 있는 객체를 전달하면 ['Alice', 25] 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"name과 age 값이 있는 객체를 전달하면 ['Alice', 25] 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체-메서드-Values.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Values.js 테스트 빈 객체를 전달하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 객체를 전달하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체-메서드-Values.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Values.js 테스트 여러 개의 프로퍼티를 가진 객체를 전달해도 모든 값을 배열로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"여러 개의 프로퍼티를 가진 객체를 전달해도 모든 값을 배열로 반환해야 한다."}],"endTime":1738890644876,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.2)객체-메서드-Values.test.js","startTime":1738890644697,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]문자열-변수사용.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]문자열-변수사용.js 테스트 greeting 변수는 문자열 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"greeting 변수는 문자열 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[2]문자열-변수사용.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]문자열-변수사용.js 테스트 greeting 변수는 '안녕하세요, 철수님!'과 같아야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"greeting 변수는 '안녕하세요, 철수님!'과 같아야 합니다."}],"endTime":1738890644906,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[2]문자열-변수사용.test.js","startTime":1738890644741,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]함수-선언과-표현식.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]함수-선언과-표현식.js 테스트 square(2)는 4를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"square(2)는 4를 반환해야 합니다."},{"ancestorTitles":["(lv.1)[1]함수-선언과-표현식.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]함수-선언과-표현식.js 테스트 square(3)는 9를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"square(3)는 9를 반환해야 합니다."},{"ancestorTitles":["(lv.1)[1]함수-선언과-표현식.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]함수-선언과-표현식.js 테스트 cube(2)는 8을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"cube(2)는 8을 반환해야 합니다."},{"ancestorTitles":["(lv.1)[1]함수-선언과-표현식.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]함수-선언과-표현식.js 테스트 cube(3)는 27을 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"cube(3)는 27을 반환해야 합니다."}],"endTime":1738890644921,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.1)[1]함수-선언과-표현식.test.js","startTime":1738890644740,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]콜백-함수-실행.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]콜백-함수-실행.js 테스트 콜백 함수를 실행하여 2배가 된 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"콜백 함수를 실행하여 2배가 된 결과를 반환해야 한다."},{"ancestorTitles":["(lv.1)[2]콜백-함수-실행.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]콜백-함수-실행.js 테스트 콜백 함수가 다른 연산을 수행해도 해당 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"콜백 함수가 다른 연산을 수행해도 해당 결과를 반환해야 한다."}],"endTime":1738890644928,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\09.콜백함수\\(lv.1)콜백-함수-실행.test.js","startTime":1738890644732,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-splice.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-splice.js 테스트 splice 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"splice 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-splice.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-splice.js 테스트 start 인덱스부터 deleteCount만큼 제거하고, 그 자리에 새 항목을 삽입해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"start 인덱스부터 deleteCount만큼 제거하고, 그 자리에 새 항목을 삽입해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-splice.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-splice.js 테스트 items가 없으면 단순히 요소를 제거만 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"items가 없으면 단순히 요소를 제거만 한다."},{"ancestorTitles":["(lv.2)배열-메서드-splice.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-splice.js 테스트 deleteCount가 0이면 요소를 제거하지 않고 삽입만 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"deleteCount가 0이면 요소를 제거하지 않고 삽입만 한다."},{"ancestorTitles":["(lv.2)배열-메서드-splice.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-splice.js 테스트 원본 배열을 조작하고, 조작된 배열을 그대로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"원본 배열을 조작하고, 조작된 배열을 그대로 반환해야 한다."}],"endTime":1738890644946,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)[1]배열-메서드-splice.test.js","startTime":1738890644739,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)팩토리얼.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)팩토리얼.js 테스트 n이 0 이하이면 0을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"n이 0 이하이면 0을 반환해야 한다."},{"ancestorTitles":["(lv.1)팩토리얼.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)팩토리얼.js 테스트 n이 1이면 1을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 1이면 1을 반환해야 한다."},{"ancestorTitles":["(lv.1)팩토리얼.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)팩토리얼.js 테스트 n이 2이면 3(1+2)을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 2이면 3(1+2)을 반환해야 한다."},{"ancestorTitles":["(lv.1)팩토리얼.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)팩토리얼.js 테스트 n이 5이면 15(1+2+3+4+5)을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"n이 5이면 15(1+2+3+4+5)을 반환해야 한다."}],"endTime":1738890644950,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\07.반복문\\(lv.1)팩토리얼.test.js","startTime":1738890644773,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","hasNegative 함수"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 hasNegative 함수 hasNegative 함수는 some 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"hasNegative 함수는 some 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","hasNegative 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 hasNegative 함수 배열에 음수가 하나라도 있으면 hasNegative 함수는 true를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 음수가 하나라도 있으면 hasNegative 함수는 true를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","hasNegative 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 hasNegative 함수 배열에 음수가 없으면 hasNegative 함수는 false를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열에 음수가 없으면 hasNegative 함수는 false를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","hasNegative 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 hasNegative 함수 배열이 비어있으면 hasNegative 함수는 false를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열이 비어있으면 hasNegative 함수는 false를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","hasNegative 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 hasNegative 함수 모든 요소가 음수여도 hasNegative 함수는 true를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모든 요소가 음수여도 hasNegative 함수는 true를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","allPositive 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 allPositive 함수 allPositive 함수는 every 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allPositive 함수는 every 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","allPositive 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 allPositive 함수 모든 요소가 양수이면 allPositive 함수는 true를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"모든 요소가 양수이면 allPositive 함수는 true를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","allPositive 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 allPositive 함수 하나라도 0 이하의 숫자가 있으면 allPositive 함수는 false를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"하나라도 0 이하의 숫자가 있으면 allPositive 함수는 false를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","allPositive 함수"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 allPositive 함수 배열이 비어있으면 allPositive 함수는 true를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열이 비어있으면 allPositive 함수는 true를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-some-and-every.js 테스트","allPositive 함수"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-some-and-every.js 테스트 allPositive 함수 음수가 하나라도 있으면 allPositive 함수는 false를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"음수가 하나라도 있으면 allPositive 함수는 false를 반환해야 한다."}],"endTime":1738890644956,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-some-and-every.test.js","startTime":1738890644751,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-map.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-map.js 테스트 배열의 각 원소를 제곱한 새 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"배열의 각 원소를 제곱한 새 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-map.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-map.js 테스트 빈 배열을 입력하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열을 입력하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-map.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-map.js 테스트 음수가 포함된 배열도 올바르게 제곱해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"음수가 포함된 배열도 올바르게 제곱해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-map.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-map.js 테스트 map 메서드를 사용하여 구현해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"map 메서드를 사용하여 구현해야 한다."}],"endTime":1738890644983,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-map.test.js","startTime":1738890644803,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 \"Hello\" 문자열을 resolve해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"\"Hello\" 문자열을 resolve해야 합니다."},{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 반환된 값은 반드시 문자열이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"반환된 값은 반드시 문자열이어야 합니다."},{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 Promise 객체를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise 객체를 반환해야 합니다."},{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 \"Hello\" 이외의 문자열을 resolve하지 않아야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"\"Hello\" 이외의 문자열을 resolve하지 않아야 합니다."},{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 reject를 호출하지 않아야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reject를 호출하지 않아야 합니다."},{"ancestorTitles":["(lv.1)[1]Promise-객체-만들기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]Promise-객체-만들기.js 테스트 비동기로 동작하는지 확인해야 합니다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"비동기로 동작하는지 확인해야 합니다."}],"endTime":1738890645004,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.1)Promise-객체-만들기(2).test.js","startTime":1738890644800,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]배열-복사하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]배열-복사하기.js 테스트 newArray는 array와 같은 참조를 가지지 않아야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"newArray는 array와 같은 참조를 가지지 않아야 합니다."},{"ancestorTitles":["(lv.1)[2]배열-복사하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]배열-복사하기.js 테스트 newArray는 [1, 2, 3, 4] 이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"newArray는 [1, 2, 3, 4] 이어야 합니다."},{"ancestorTitles":["(lv.1)[2]배열-복사하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]배열-복사하기.js 테스트 array는 원래 배열 [1, 2, 3]을 유지해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"array는 원래 배열 [1, 2, 3]을 유지해야 합니다."}],"endTime":1738890645007,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.1)[2]배열-복사하기.test.js","startTime":1738890644776,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]기본-산술-연산자.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본-산술-연산자.js 테스트 add 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"add 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]기본-산술-연산자.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본-산술-연산자.js 테스트 subtract 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]기본-산술-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본-산술-연산자.js 테스트 multiply 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 변수는 10이어야 합니다."},{"ancestorTitles":["(lv.1)[2]기본-산술-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]기본-산술-연산자.js 테스트 divide 변수는 10이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 변수는 10이어야 합니다."}],"endTime":1738890645044,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)기본-산술-연산자.test.js","startTime":1738890644890,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)Promise-체이닝-catch.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-체이닝-catch.js 테스트 primary가 성공하면 primary의 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"primary가 성공하면 primary의 결과를 반환해야 한다."},{"ancestorTitles":["(lv.2)Promise-체이닝-catch.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-체이닝-catch.js 테스트 primary가 실패하면 fallback을 호출하고, 그 결과를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"primary가 실패하면 fallback을 호출하고, 그 결과를 반환해야 한다."},{"ancestorTitles":["(lv.2)Promise-체이닝-catch.js 테스트"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)Promise-체이닝-catch.js 테스트 primary와 fallback 둘 다 실패하면 해당 에러를 던져야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"primary와 fallback 둘 다 실패하면 해당 에러를 던져야 한다."}],"endTime":1738890645068,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.2)Promise-체이닝-catch.test.js","startTime":1738890644876,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)객체-메서드-Keys.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Keys.js 테스트 name과 age 키를 가진 객체를 전달하면 ['name', 'age'] 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"name과 age 키를 가진 객체를 전달하면 ['name', 'age'] 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체-메서드-Keys.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Keys.js 테스트 빈 객체를 전달하면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 객체를 전달하면 빈 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)객체-메서드-Keys.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)객체-메서드-Keys.js 테스트 여러 개의 프로퍼티를 가진 객체를 전달해도 모든 키를 배열로 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"여러 개의 프로퍼티를 가진 객체를 전달해도 모든 키를 배열로 반환해야 한다."}],"endTime":1738890645114,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\05.객체\\(lv.2)객체-메서드-Keys.test.js","startTime":1738890644936,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]기본함수(2).js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]기본함수(2).js 테스트 'Hello, {name}'를 반환해야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"'Hello, {name}'를 반환해야 합니다."}],"endTime":1738890645138,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\03.함수\\(lv.1)[1]기본함수(2).test.js","startTime":1738890644960,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)배열-메서드-sort.js 테스트"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-sort.js 테스트 sort 메서드를 사용해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sort 메서드를 사용해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-sort.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-sort.js 테스트 원본 배열을 변경하지 않고, 오름차순으로 정렬된 새 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"원본 배열을 변경하지 않고, 오름차순으로 정렬된 새 배열을 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-sort.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-sort.js 테스트 [5,4,3,2,1]을 입력하면 [1,2,3,4,5]를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"[5,4,3,2,1]을 입력하면 [1,2,3,4,5]를 반환해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-sort.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-sort.js 테스트 음수가 포함된 배열도 올바르게 정렬해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"음수가 포함된 배열도 올바르게 정렬해야 한다."},{"ancestorTitles":["(lv.2)배열-메서드-sort.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)배열-메서드-sort.js 테스트 빈 배열이면 빈 배열을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"빈 배열이면 빈 배열을 반환해야 한다."}],"endTime":1738890645141,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\06.배열\\(lv.2)배열-메서드-sort.test.js","startTime":1738890644918,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)로그인-함수-작성하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)로그인-함수-작성하기.js 테스트 id=\"admin\", pw=\"1234\"이면 \"ok\"를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"id=\"admin\", pw=\"1234\"이면 \"ok\"를 반환해야 한다."},{"ancestorTitles":["(lv.3)로그인-함수-작성하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)로그인-함수-작성하기.js 테스트 id나 pw가 다르면 \"fail\"을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"id나 pw가 다르면 \"fail\"을 반환해야 한다."},{"ancestorTitles":["(lv.3)로그인-함수-작성하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)로그인-함수-작성하기.js 테스트 에러가 발생하면 \"error\"를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"에러가 발생하면 \"error\"를 반환해야 한다."}],"endTime":1738890645143,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.3)로그인-함수-작성하기.test.js","startTime":1738890644943,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)카운터-함수-만들기.js 테스트"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)카운터-함수-만들기.js 테스트 createCounter 함수는 객체를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"createCounter 함수는 객체를 반환해야 한다."},{"ancestorTitles":["(lv.2)카운터-함수-만들기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)카운터-함수-만들기.js 테스트 객체는 increase, decrease, currentValue 메서드를 모두 가져야 한다.","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"객체는 increase, decrease, currentValue 메서드를 모두 가져야 한다."},{"ancestorTitles":["(lv.2)카운터-함수-만들기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)카운터-함수-만들기.js 테스트 increase 메서드는 count를 1 증가시켜야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"increase 메서드는 count를 1 증가시켜야 한다."},{"ancestorTitles":["(lv.2)카운터-함수-만들기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)카운터-함수-만들기.js 테스트 decrease 메서드는 count를 1 감소시켜야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"decrease 메서드는 count를 1 감소시켜야 한다."},{"ancestorTitles":["(lv.2)카운터-함수-만들기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)카운터-함수-만들기.js 테스트 여러 번 호출해도 count 값이 유지되어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"여러 번 호출해도 count 값이 유지되어야 한다."}],"endTime":1738890645162,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\08.클로저\\(lv.2)카운터-함수-만들기.test.js","startTime":1738890644964,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]나머지-연산자.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]나머지-연산자.js 테스트 remainder 변수는 2이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"remainder 변수는 2이어야 합니다."},{"ancestorTitles":["(lv.1)[2]나머지-연산자.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]나머지-연산자.js 테스트 remainder 변수는 number 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"remainder 변수는 number 타입이어야 합니다."}],"endTime":1738890645164,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\02.연산자\\(lv.1)나머지-연산자.test.js","startTime":1738890644970,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[1]undefined-vs-null.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]undefined-vs-null.js 테스트 undeclaredVar 변수는 undefined 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"undeclaredVar 변수는 undefined 타입이어야 합니다."},{"ancestorTitles":["(lv.1)[1]undefined-vs-null.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[1]undefined-vs-null.js 테스트 nullVar 변수는 object 타입이어야 합니다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"nullVar 변수는 object 타입이어야 합니다."}],"endTime":1738890645199,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\01.변수\\(lv.1)[1]undefined-vs-null.test.js","startTime":1738890645019,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 Promise가 지정된 시간 내에 해결되면, 해당 결과를 반환한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise가 지정된 시간 내에 해결되면, 해당 결과를 반환한다."},{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 Promise가 지정된 시간 내에 해결되지 않으면, \"timeout\" 에러를 던진다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise가 지정된 시간 내에 해결되지 않으면, \"timeout\" 에러를 던진다."},{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 Promise가 지정된 시간 내에 이미 해결된 경우, 즉시 결과를 반환한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise가 지정된 시간 내에 이미 해결된 경우, 즉시 결과를 반환한다."},{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 두 번째 인자인 시간이 0인 경우, 항상 \"timeout\"을 거부한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"두 번째 인자인 시간이 0인 경우, 항상 \"timeout\"을 거부한다."},{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 Promise가 해결되기 직전에 타임아웃이 발생하지 않는지 확인한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Promise가 해결되기 직전에 타임아웃이 발생하지 않는지 확인한다."},{"ancestorTitles":["(lv.3)timeout.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.3)timeout.js 테스트 타임아웃이 발생했을 때, 타이머가 제대로 클리어되는지 확인한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"타임아웃이 발생했을 때, 타이머가 제대로 클리어되는지 확인한다."}],"endTime":1738890645205,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part2\\03.비동기\\(lv.3)timeout.test.js","startTime":1738890645004,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 1이면 '월'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"1이면 '월'을 반환해야 한다."},{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 3이면 '수'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"3이면 '수'를 반환해야 한다."},{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 6이면 '토'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"6이면 '토'를 반환해야 한다."},{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 7이면 '일'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"7이면 '일'을 반환해야 한다."},{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 0이면 'Invalid'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"0이면 'Invalid'를 반환해야 한다."},{"ancestorTitles":["(lv.1)요일-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)요일-구하기.js 테스트 8이면 'Invalid'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"8이면 'Invalid'를 반환해야 한다."}],"endTime":1738890645206,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\04.조건문\\(lv.1)요일-구하기.test.js","startTime":1738890645020,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)홀짝-구하기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)홀짝-구하기.js 테스트 짝수(2)를 전달하면 'Even'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"짝수(2)를 전달하면 'Even'을 반환해야 한다."},{"ancestorTitles":["(lv.1)홀짝-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)홀짝-구하기.js 테스트 짝수(10)를 전달하면 'Even'을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"짝수(10)를 전달하면 'Even'을 반환해야 한다."},{"ancestorTitles":["(lv.1)홀짝-구하기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)홀짝-구하기.js 테스트 홀수(3)를 전달하면 'Odd'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"홀수(3)를 전달하면 'Odd'를 반환해야 한다."},{"ancestorTitles":["(lv.1)홀짝-구하기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)홀짝-구하기.js 테스트 홀수(11)를 전달하면 'Odd'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"홀수(11)를 전달하면 'Odd'를 반환해야 한다."}],"endTime":1738890645218,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\04.조건문\\(lv.1)홀짝-구하기.test.js","startTime":1738890645061,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)skip-and-stop.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)skip-and-stop.js 테스트 함수를 실행하면 최종 합인 16을 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"함수를 실행하면 최종 합인 16을 반환해야 한다."}],"endTime":1738890645243,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\07.반복문\\(lv.1)skip-and-stop.test.js","startTime":1738890645082,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.2)기본-클로저.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)기본-클로저.js 테스트 simpleClosure 함수는 내부 함수를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"simpleClosure 함수는 내부 함수를 반환해야 한다."},{"ancestorTitles":["(lv.2)기본-클로저.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.2)기본-클로저.js 테스트 반환된 내부 함수를 실행하면 'Hello Closure!'를 반환해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"반환된 내부 함수를 실행하면 'Hello Closure!'를 반환해야 한다."}],"endTime":1738890645263,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\08.클로저\\(lv.2)기본-클로저.test.js","startTime":1738890645131,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["(lv.1)[2]Promise-객체-만들기.js 테스트"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]Promise-객체-만들기.js 테스트 resolvePromise는 'Hello'를 resolve해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"resolvePromise는 'Hello'를 resolve해야 한다."},{"ancestorTitles":["(lv.1)[2]Promise-객체-만들기.js 테스트"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]Promise-객체-만들기.js 테스트 rejectPromise는 'Error!'를 reject해야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"rejectPromise는 'Error!'를 reject해야 한다."},{"ancestorTitles":["(lv.1)[2]Promise-객체-만들기.js 테스트"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"(lv.1)[2]Promise-객체-만들기.js 테스트 resolvePromise와 rejectPromise는 각각 Promise 객체여야 한다.","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"resolvePromise와 rejectPromise는 각각 Promise 객체여야 한다."}],"endTime":1738890645265,"message":"","name":"C:\\Users\\ilove\\Desktop\\sparta\\javascript-problem-bank\\__test__do_not_edit\\part1\\10.비동기\\(lv.1)Promise-객체-만들기.test.js","startTime":1738890645152,"status":"passed","summary":""}],"wasInterrupted":false}
